[{"/home/steve/codes/algernon_dapp/app/src/index.js":"1","/home/steve/codes/algernon_dapp/app/src/theme.js":"2","/home/steve/codes/algernon_dapp/app/src/App.js":"3","/home/steve/codes/algernon_dapp/app/src/serviceWorker.js":"4","/home/steve/codes/algernon_dapp/app/src/utils/apolloClient.js":"5","/home/steve/codes/algernon_dapp/app/src/config.js":"6","/home/steve/codes/algernon_dapp/app/src/components/pages/Tags.js":"7","/home/steve/codes/algernon_dapp/app/src/components/pages/Overview.js":"8","/home/steve/codes/algernon_dapp/app/src/components/pages/Topic.js":"9","/home/steve/codes/algernon_dapp/app/src/components/pages/Users.js":"10","/home/steve/codes/algernon_dapp/app/src/components/providers/WalletProvider.js":"11","/home/steve/codes/algernon_dapp/app/src/components/pages/Profile.js":"12","/home/steve/codes/algernon_dapp/app/src/components/providers/FileStoreProvider.js":"13","/home/steve/codes/algernon_dapp/app/src/components/pages/Tag.tsx":"14","/home/steve/codes/algernon_dapp/app/src/components/pages/Topics.tsx":"15","/home/steve/codes/algernon_dapp/app/src/components/pages/About.tsx":"16","/home/steve/codes/algernon_dapp/app/src/components/pages/Admin.tsx":"17","/home/steve/codes/algernon_dapp/app/src/components/hooks/useGetAccount.js":"18","/home/steve/codes/algernon_dapp/app/src/components/materialDashboard/layouts/Topbar.js":"19","/home/steve/codes/algernon_dapp/app/src/components/materialDashboard/layouts/Sidebar.js":"20","/home/steve/codes/algernon_dapp/app/src/components/organisms/Tags/TagsMain.js":"21","/home/steve/codes/algernon_dapp/app/src/components/organisms/Colleges/CollegeCards.js":"22","/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/optionsFormatters.js":"23","/home/steve/codes/algernon_dapp/app/src/components/layouts/MainLayout.js":"24","/home/steve/codes/algernon_dapp/app/src/components/atoms/Box.js":"25","/home/steve/codes/algernon_dapp/app/src/fileStorage/ipfs.js":"26","/home/steve/codes/algernon_dapp/app/src/components/organisms/Users/UserList.tsx":"27","/home/steve/codes/algernon_dapp/app/src/queries/tag.tsx":"28","/home/steve/codes/algernon_dapp/app/src/queries/topic.tsx":"29","/home/steve/codes/algernon_dapp/app/src/utils/web3.ts":"30","/home/steve/codes/algernon_dapp/app/src/components/molecules/topics/Detail.tsx":"31","/home/steve/codes/algernon_dapp/app/src/components/organisms/Tags/TagDetail.js":"32","/home/steve/codes/algernon_dapp/app/src/components/organisms/Profile/ProfileMain.js":"33","/home/steve/codes/algernon_dapp/app/src/components/organisms/Topics/TopicList.tsx":"34","/home/steve/codes/algernon_dapp/app/src/components/organisms/Admin/Main.tsx":"35","/home/steve/codes/algernon_dapp/app/src/components/atoms/Flex.js":"36","/home/steve/codes/algernon_dapp/app/src/components/materialDashboard/components/SidebarNav.js":"37","/home/steve/codes/algernon_dapp/app/src/components/materialDashboard/components/ImageCard.js":"38","/home/steve/codes/algernon_dapp/app/src/components/atoms/Link.js":"39","/home/steve/codes/algernon_dapp/app/src/components/organisms/Tags/TagList.js":"40","/home/steve/codes/algernon_dapp/app/src/components/molecules/user/Badge.js":"41","/home/steve/codes/algernon_dapp/app/src/components/atoms/RichText.js":"42","/home/steve/codes/algernon_dapp/app/src/components/atoms/Chip.js":"43","/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/UpdateTopicMeta.js":"44","/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/CreateTopic.js":"45","/home/steve/codes/algernon_dapp/app/src/selectors/topic.ts":"46","/home/steve/codes/algernon_dapp/app/src/components/atoms/Paper.js":"47","/home/steve/codes/algernon_dapp/app/src/components/molecules/topics/NotesAndForm.tsx":"48","/home/steve/codes/algernon_dapp/app/src/components/molecules/user/BlockieAddress.tsx":"49","/home/steve/codes/algernon_dapp/app/src/components/molecules/topics/ListItem.tsx":"50","/home/steve/codes/algernon_dapp/app/src/components/organisms/Tags/TagsAdmin.tsx":"51","/home/steve/codes/algernon_dapp/app/src/components/molecules/admin/Roles.tsx":"52","/home/steve/codes/algernon_dapp/app/src/components/atoms/Address.js":"53","/home/steve/codes/algernon_dapp/app/src/components/atoms/Blockie.js":"54","/home/steve/codes/algernon_dapp/app/src/components/molecules/common/LoadingCard.js":"55","/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/buttons/Button.js":"56","/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/UpdateTopicNotes.js":"57","/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/CreateTag.js":"58","/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/Role.tsx":"59","/home/steve/codes/algernon_dapp/app/src/components/atoms/Loading.js":"60","/home/steve/codes/algernon_dapp/app/src/utils/formatters/index.js":"61","/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/RichText.js":"62","/home/steve/codes/algernon_dapp/app/src/schemas/topic.js":"63","/home/steve/codes/algernon_dapp/app/src/components/formikTLDR/forms/utils.js":"64","/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/Text.js":"65","/home/steve/codes/algernon_dapp/app/src/components/formikTLDR/forms/CallAndWeb3Form.tsx":"66","/home/steve/codes/algernon_dapp/app/src/components/formikTLDR/forms/Web3Form.tsx":"67","/home/steve/codes/algernon_dapp/app/src/schemas/admin.ts":"68","/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/ErrorMessage.js":"69","/home/steve/codes/algernon_dapp/app/src/schemas/common.js":"70","/home/steve/codes/algernon_dapp/app/src/components/formikTLDR/forms/common.tsx":"71","/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/Select.js":"72","/home/steve/codes/algernon_dapp/app/src/schemas/tag.js":"73","/home/steve/codes/algernon_dapp/app/src/components/atoms/Modal.tsx":"74","/home/steve/codes/algernon_dapp/app/src/components/organisms/ConnectedWallet/index.tsx":"75","/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/SelectWallet.tsx":"76","/home/steve/codes/algernon_dapp/app/src/schemas/wallet.ts":"77","/home/steve/codes/algernon_dapp/app/src/components/formikTLDR/forms/BasicForm.tsx":"78","/home/steve/codes/algernon_dapp/app/src/components/atoms/logos/Fortmatic.tsx":"79","/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/CardSelect.tsx":"80","/home/steve/codes/algernon_dapp/app/src/components/atoms/logos/MetaMask.tsx":"81","/home/steve/codes/algernon_dapp/app/src/utils/wallets/index.ts":"82","/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/CardItem.tsx":"83","/home/steve/codes/algernon_dapp/app/src/components/atoms/logos/Base.tsx":"84","/home/steve/codes/algernon_dapp/app/src/utils/wallets/fortmatic.ts":"85","/home/steve/codes/algernon_dapp/app/src/utils/wallets/metamask.ts":"86","/home/steve/codes/algernon_dapp/app/src/utils/wallets/base.ts":"87","/home/steve/codes/algernon_dapp/app/src/queries/user.tsx":"88","/home/steve/codes/algernon_dapp/app/src/components/organisms/Profile/TokenBalances.tsx":"89","/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/DepositTokens.tsx":"90","/home/steve/codes/algernon_dapp/app/src/schemas/token.js":"91","/home/steve/codes/algernon_dapp/app/src/components/atoms/icons/Stake.js":"92","/home/steve/codes/algernon_dapp/app/src/components/molecules/tags/TagBadge.js":"93","/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/CreateStake.tsx":"94","/home/steve/codes/algernon_dapp/app/src/schemas/stake.js":"95","/home/steve/codes/algernon_dapp/app/src/queries/stake.tsx":"96","/home/steve/codes/algernon_dapp/app/src/selectors/stake.ts":"97","/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/UpdateStake.tsx":"98","/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/Radio.js":"99","/home/steve/codes/algernon_dapp/app/src/selectors/user.ts":"100","/home/steve/codes/algernon_dapp/app/src/components/organisms/Stakes/StakeList.tsx":"101","/home/steve/codes/algernon_dapp/app/src/components/molecules/stakes/TopicStakesListItem.tsx":"102","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/index.js":"103","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/App.js":"104","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/serviceWorker.js":"105","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/utils/apolloClient.js":"106","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/config.js":"107","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/pages/Overview.js":"108","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/pages/Validators.jsx":"109","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/utils/address.js":"110","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/TmDataLoading.jsx":"111","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/TmPage.jsx":"112","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/staking/TableValidators.jsx":"113","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/staking/PanelSort.jsx":"114","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/queries/indexers.tsx":"115","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/selectors/indexer.ts":"116","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/utils/helpers.ts":"117","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/utils/formatters/index.js":"118","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/Avatar.tsx":"119","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/AppPage.tsx":"120","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/AppHeader.tsx":"121","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/account/UserMenu.jsx":"122","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/AppMenu.tsx":"123","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/Modal.jsx":"124","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/account/UserMenuAddress.tsx":"125","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/account/UserAccountRow.jsx":"126","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/Address.tsx":"127","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/staking/theGraphProtocol/LiValidator.tsx":"128","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/staking/theGraphProtocol/tableFields.js":"129","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/staking/theGraphProtocol/IndexersTable.tsx":"130","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/account/Web3Modal.jsx":"131","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/providers/WalletProvider.jsx":"132","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/pages/Portfolio.jsx":"133","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/queries/graphAccount.tsx":"134","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/account/GraphAccountBalance.tsx":"135","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/BalanceRow.tsx":"136","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/selectors/graphAccount.ts":"137"},{"size":947,"mtime":1613616417826,"results":"138","hashOfConfig":"139"},{"size":103,"mtime":1603938262735,"results":"140","hashOfConfig":"139"},{"size":1885,"mtime":1608861786929,"results":"141","hashOfConfig":"139"},{"size":4948,"mtime":1593918231962,"results":"142","hashOfConfig":"139"},{"size":186,"mtime":1613616417826,"results":"143","hashOfConfig":"139"},{"size":1058,"mtime":1615174726944,"results":"144","hashOfConfig":"139"},{"size":831,"mtime":1613616417822,"results":"145","hashOfConfig":"139"},{"size":1268,"mtime":1614274342962,"results":"146","hashOfConfig":"139"},{"size":1790,"mtime":1615007846187,"results":"147","hashOfConfig":"139"},{"size":661,"mtime":1613616417826,"results":"148","hashOfConfig":"139"},{"size":1751,"mtime":1615007846187,"results":"149","hashOfConfig":"139"},{"size":1813,"mtime":1615140292872,"results":"150","hashOfConfig":"139"},{"size":1092,"mtime":1613616417826,"results":"151","hashOfConfig":"139"},{"size":963,"mtime":1613616417818,"results":"152","hashOfConfig":"139"},{"size":965,"mtime":1613616417826,"results":"153","hashOfConfig":"139"},{"size":134,"mtime":1613616417818,"results":"154","hashOfConfig":"139"},{"size":1226,"mtime":1613616417818,"results":"155","hashOfConfig":"139"},{"size":236,"mtime":1613616417802,"results":"156","hashOfConfig":"139"},{"size":1563,"mtime":1603653991897,"results":"157","hashOfConfig":"139"},{"size":2218,"mtime":1608861786933,"results":"158","hashOfConfig":"139"},{"size":175,"mtime":1608861786933,"results":"159","hashOfConfig":"139"},{"size":589,"mtime":1609299891730,"results":"160","hashOfConfig":"139"},{"size":455,"mtime":1608861786933,"results":"161","hashOfConfig":"139"},{"size":576,"mtime":1613616417802,"results":"162","hashOfConfig":"139"},{"size":591,"mtime":1597543343055,"results":"163","hashOfConfig":"139"},{"size":697,"mtime":1613616417826,"results":"164","hashOfConfig":"139"},{"size":739,"mtime":1613616417810,"results":"165","hashOfConfig":"139"},{"size":2278,"mtime":1615395636022,"results":"166","hashOfConfig":"139"},{"size":4190,"mtime":1615395636022,"results":"167","hashOfConfig":"139"},{"size":672,"mtime":1615007846187,"results":"168","hashOfConfig":"139"},{"size":5513,"mtime":1615140292872,"results":"169","hashOfConfig":"139"},{"size":215,"mtime":1603729009185,"results":"170","hashOfConfig":"139"},{"size":1514,"mtime":1615140292872,"results":"171","hashOfConfig":"139"},{"size":442,"mtime":1613616417810,"results":"172","hashOfConfig":"139"},{"size":843,"mtime":1608861786933,"results":"173","hashOfConfig":"139"},{"size":196,"mtime":1593918231954,"results":"174","hashOfConfig":"139"},{"size":2005,"mtime":1597543343059,"results":"175","hashOfConfig":"139"},{"size":1495,"mtime":1613616417806,"results":"176","hashOfConfig":"139"},{"size":183,"mtime":1613616417794,"results":"177","hashOfConfig":"139"},{"size":421,"mtime":1593918231954,"results":"178","hashOfConfig":"139"},{"size":537,"mtime":1613587360038,"results":"179","hashOfConfig":"139"},{"size":305,"mtime":1613616417794,"results":"180","hashOfConfig":"139"},{"size":465,"mtime":1593918231954,"results":"181","hashOfConfig":"139"},{"size":4127,"mtime":1613930844012,"results":"182","hashOfConfig":"139"},{"size":4215,"mtime":1613713353707,"results":"183","hashOfConfig":"139"},{"size":583,"mtime":1615007846187,"results":"184","hashOfConfig":"139"},{"size":216,"mtime":1613616417794,"results":"185","hashOfConfig":"139"},{"size":1409,"mtime":1604195459259,"results":"186","hashOfConfig":"139"},{"size":431,"mtime":1613587452139,"results":"187","hashOfConfig":"139"},{"size":1041,"mtime":1615007846183,"results":"188","hashOfConfig":"139"},{"size":568,"mtime":1608861786933,"results":"189","hashOfConfig":"139"},{"size":1228,"mtime":1608861786933,"results":"190","hashOfConfig":"139"},{"size":216,"mtime":1593918231954,"results":"191","hashOfConfig":"139"},{"size":220,"mtime":1613616417794,"results":"192","hashOfConfig":"139"},{"size":253,"mtime":1613616417806,"results":"193","hashOfConfig":"139"},{"size":350,"mtime":1613616417794,"results":"194","hashOfConfig":"139"},{"size":2531,"mtime":1613712638504,"results":"195","hashOfConfig":"139"},{"size":1485,"mtime":1608861786933,"results":"196","hashOfConfig":"139"},{"size":1170,"mtime":1608861786933,"results":"197","hashOfConfig":"139"},{"size":461,"mtime":1613616417794,"results":"198","hashOfConfig":"139"},{"size":522,"mtime":1615007846187,"results":"199","hashOfConfig":"139"},{"size":572,"mtime":1613616417794,"results":"200","hashOfConfig":"139"},{"size":1515,"mtime":1593918231962,"results":"201","hashOfConfig":"139"},{"size":758,"mtime":1615007846183,"results":"202","hashOfConfig":"139"},{"size":525,"mtime":1613616417794,"results":"203","hashOfConfig":"139"},{"size":5007,"mtime":1613712900113,"results":"204","hashOfConfig":"139"},{"size":3520,"mtime":1615140292868,"results":"205","hashOfConfig":"139"},{"size":250,"mtime":1608861786933,"results":"206","hashOfConfig":"139"},{"size":182,"mtime":1613616417794,"results":"207","hashOfConfig":"139"},{"size":283,"mtime":1593918231962,"results":"208","hashOfConfig":"139"},{"size":263,"mtime":1600742087730,"results":"209","hashOfConfig":"139"},{"size":1330,"mtime":1597543343055,"results":"210","hashOfConfig":"139"},{"size":237,"mtime":1610725412572,"results":"211","hashOfConfig":"139"},{"size":1335,"mtime":1615007846183,"results":"212","hashOfConfig":"139"},{"size":589,"mtime":1613616417810,"results":"213","hashOfConfig":"139"},{"size":3867,"mtime":1615007846183,"results":"214","hashOfConfig":"139"},{"size":320,"mtime":1613178701645,"results":"215","hashOfConfig":"139"},{"size":928,"mtime":1613616417802,"results":"216","hashOfConfig":"139"},{"size":259,"mtime":1613616417802,"results":"217","hashOfConfig":"139"},{"size":1384,"mtime":1603424789787,"results":"218","hashOfConfig":"139"},{"size":253,"mtime":1613616417802,"results":"219","hashOfConfig":"139"},{"size":183,"mtime":1613616417830,"results":"220","hashOfConfig":"139"},{"size":1152,"mtime":1603425359042,"results":"221","hashOfConfig":"139"},{"size":271,"mtime":1613616417798,"results":"222","hashOfConfig":"139"},{"size":528,"mtime":1614364498930,"results":"223","hashOfConfig":"139"},{"size":478,"mtime":1613616417830,"results":"224","hashOfConfig":"139"},{"size":156,"mtime":1613616417826,"results":"225","hashOfConfig":"139"},{"size":1484,"mtime":1615140292872,"results":"226","hashOfConfig":"139"},{"size":836,"mtime":1615174726944,"results":"227","hashOfConfig":"139"},{"size":1693,"mtime":1615007846183,"results":"228","hashOfConfig":"139"},{"size":164,"mtime":1615007846187,"results":"229","hashOfConfig":"139"},{"size":325,"mtime":1615007846183,"results":"230","hashOfConfig":"139"},{"size":488,"mtime":1615007846183,"results":"231","hashOfConfig":"139"},{"size":1950,"mtime":1615140292872,"results":"232","hashOfConfig":"139"},{"size":401,"mtime":1615007846187,"results":"233","hashOfConfig":"139"},{"size":1993,"mtime":1615140292872,"results":"234","hashOfConfig":"139"},{"size":693,"mtime":1615007846187,"results":"235","hashOfConfig":"139"},{"size":2485,"mtime":1615140292872,"results":"236","hashOfConfig":"139"},{"size":1480,"mtime":1615007846183,"results":"237","hashOfConfig":"139"},{"size":1025,"mtime":1615140292872,"results":"238","hashOfConfig":"139"},{"size":471,"mtime":1615140292872,"results":"239","hashOfConfig":"139"},{"size":1009,"mtime":1615140292868,"results":"240","hashOfConfig":"139"},{"size":852,"mtime":1620154375785,"results":"241","hashOfConfig":"242"},{"size":691,"mtime":1620168026816,"results":"243","hashOfConfig":"242"},{"size":4948,"mtime":1617557245845,"results":"244","hashOfConfig":"242"},{"size":170,"mtime":1617689453389,"results":"245","hashOfConfig":"242"},{"size":909,"mtime":1617767183343,"results":"246","hashOfConfig":"242"},{"size":206,"mtime":1617735015437,"results":"247","hashOfConfig":"242"},{"size":391,"mtime":1620154824470,"results":"248","hashOfConfig":"242"},{"size":667,"mtime":1617557245845,"results":"249","hashOfConfig":"242"},{"size":401,"mtime":1618768920574,"results":"250","hashOfConfig":"242"},{"size":1878,"mtime":1617644946611,"results":"251","hashOfConfig":"242"},{"size":1958,"mtime":1618426598235,"results":"252","hashOfConfig":"242"},{"size":1221,"mtime":1618508443920,"results":"253","hashOfConfig":"242"},{"size":2367,"mtime":1618426897671,"results":"254","hashOfConfig":"242"},{"size":1785,"mtime":1617812628315,"results":"255","hashOfConfig":"242"},{"size":381,"mtime":1617734826780,"results":"256","hashOfConfig":"242"},{"size":522,"mtime":1617557245845,"results":"257","hashOfConfig":"242"},{"size":625,"mtime":1617813843003,"results":"258","hashOfConfig":"242"},{"size":670,"mtime":1620169126349,"results":"259","hashOfConfig":"242"},{"size":3790,"mtime":1617775542668,"results":"260","hashOfConfig":"242"},{"size":3795,"mtime":1618864071817,"results":"261","hashOfConfig":"242"},{"size":2239,"mtime":1620168927389,"results":"262","hashOfConfig":"242"},{"size":568,"mtime":1617732907764,"results":"263","hashOfConfig":"242"},{"size":606,"mtime":1617768657516,"results":"264","hashOfConfig":"242"},{"size":1345,"mtime":1617768205293,"results":"265","hashOfConfig":"242"},{"size":1155,"mtime":1619544062108,"results":"266","hashOfConfig":"242"},{"size":1718,"mtime":1618509868206,"results":"267","hashOfConfig":"242"},{"size":631,"mtime":1618509829943,"results":"268","hashOfConfig":"242"},{"size":2212,"mtime":1618868282461,"results":"269","hashOfConfig":"242"},{"size":375,"mtime":1618687879812,"results":"270","hashOfConfig":"242"},{"size":1563,"mtime":1618688743414,"results":"271","hashOfConfig":"242"},{"size":338,"mtime":1620169277332,"results":"272","hashOfConfig":"242"},{"size":1366,"mtime":1620169435606,"results":"273","hashOfConfig":"242"},{"size":788,"mtime":1620169409086,"results":"274","hashOfConfig":"242"},{"size":2302,"mtime":1620169653329,"results":"275","hashOfConfig":"242"},{"size":2042,"mtime":1620169545739,"results":"276","hashOfConfig":"242"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},"1isu14",{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"279"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"279"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"279"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"308"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"308"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"308"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"308"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"468"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"308"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"308"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"279"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"496"},"q1a7j7",{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"496"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"496"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"496"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"496"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"496"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"496"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"496"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"496"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"517"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"520","messages":"521","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522","usedDeprecatedRules":"496"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"525"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"525"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"525"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"496"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"525"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"525"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"525"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"496"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"525"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"546"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"525"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"496"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"525"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"525"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"496"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"525"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"496"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"496"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"496"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"572","messages":"573","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/steve/codes/algernon_dapp/app/src/index.js",[],["576","577"],"/home/steve/codes/algernon_dapp/app/src/theme.js",[],"/home/steve/codes/algernon_dapp/app/src/App.js",[],"/home/steve/codes/algernon_dapp/app/src/serviceWorker.js",[],"/home/steve/codes/algernon_dapp/app/src/utils/apolloClient.js",[],"/home/steve/codes/algernon_dapp/app/src/config.js",[],"/home/steve/codes/algernon_dapp/app/src/components/pages/Tags.js",[],"/home/steve/codes/algernon_dapp/app/src/components/pages/Overview.js",[],"/home/steve/codes/algernon_dapp/app/src/components/pages/Topic.js",["578","579"],"import React, { useContext, useEffect, useState } from 'react'\nimport MainLayout from '../layouts/MainLayout'\nimport Header from '../materialDashboard/layouts/Topbar'\nimport Sidebar from '../materialDashboard/layouts/Sidebar'\nimport TopicDetail from '../molecules/topics/Detail'\nimport { useGetTopic, useGetTopics } from '../../queries/topic'\nimport { theGraphClient } from '../../utils/apolloClient'\nimport { tagsToOptions, topicsToOptions } from '../atoms/inputs/optionsFormatters'\nimport { useGetTags } from '../../queries/tag'\nimport { WalletContext } from '../providers/WalletProvider'\nimport { useGetUserTopicStake } from '../../queries/stake'\n\nconst Topic = ({match: { params: id}}) => {\n  id = id.id\n\n  const { algernonInstance, canViewAdmin, address: connectedAddress } = useContext(WalletContext)\n  const { stakes: userStakes } = useGetUserTopicStake(theGraphClient, id, connectedAddress)\n\n  const { loading, topic, refetch: refetchTopic } = useGetTopic(theGraphClient, id)\n  const { topics } = useGetTopics(theGraphClient, 0, 100)\n  const topicOptions = topicsToOptions(topics || [])\n  const { tags } = useGetTags (theGraphClient, 0, 100)\n  const tagOptions = tagsToOptions(tags || [])\n\n  console.log(`inside topic user stakes ${JSON.stringify(userStakes, null, 2)}`)\n  const main = loading || !topic ?\n    'loading' :\n    <TopicDetail\n      connectedAddress={connectedAddress}\n      algernonInstance={algernonInstance}\n      userStakes={userStakes}\n      topic={topic}\n      topicOptions={topicOptions}\n      tagOptions={tagOptions}\n      refetchTopic={refetchTopic}\n    />\n    \n  return (\n    <MainLayout\n      header={<Header />}\n      sidebar={<Sidebar selectedAddress={connectedAddress} canViewAdmin={canViewAdmin} />}\n      main={ main }\n    />\n  )\n}\n\nexport default Topic\n","/home/steve/codes/algernon_dapp/app/src/components/pages/Users.js",[],"/home/steve/codes/algernon_dapp/app/src/components/providers/WalletProvider.js",[],"/home/steve/codes/algernon_dapp/app/src/components/pages/Profile.js",[],"/home/steve/codes/algernon_dapp/app/src/components/providers/FileStoreProvider.js",["580"],"import React, { createContext, useReducer, useEffect, useMemo } from 'react'\nimport initIpfs from '../../fileStorage/ipfs'\n\nconst UPDATE_TYPES = {\n  SET_CLIENT: 'SET_CLIENT'\n}\n\nconst initialState = {\n  client: null\n}\n\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case UPDATE_TYPES.SET_CLIENT:\n      return {\n        ...state,\n        client: action.payload.client\n      }\n    default:\n      return state\n  }\n}\n\nexport const FileStoreContext = createContext(null)\n\nconst initClient = async (setClient) => {\n  const client = await initIpfs()\n  setClient({client}) \n}\nconst Provider = ({children}) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  const contextValue = useMemo(() => {\n    return {\n      ...state,\n      setClient: ({ client }) => dispatch({type: UPDATE_TYPES.SET_CLIENT, payload: { client }})\n    };\n  }, [state, dispatch]);\n\n  useEffect(() => {\n    initClient(contextValue.setClient)\n  },[])\n\n  return (\n    <FileStoreContext.Provider value={contextValue}>\n      {children}\n    </FileStoreContext.Provider>\n  )\n}\n\nexport default Provider","/home/steve/codes/algernon_dapp/app/src/components/pages/Tag.tsx",[],["581","582"],"/home/steve/codes/algernon_dapp/app/src/components/pages/Topics.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/pages/About.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/pages/Admin.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/hooks/useGetAccount.js",["583"],"import React, {useEffect, useState} from 'react'\n// import  { web3 } from '../../utils/web3'\n\nconst Hook = () => {\n  const [account] = useState(null)\n\n  useEffect(() => {\n    //getAccounts()\n  })\n\n  return account\n}\n\nexport default Hook","/home/steve/codes/algernon_dapp/app/src/components/materialDashboard/layouts/Topbar.js",[],"/home/steve/codes/algernon_dapp/app/src/components/materialDashboard/layouts/Sidebar.js",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/Tags/TagsMain.js",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/Colleges/CollegeCards.js",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/optionsFormatters.js",[],"/home/steve/codes/algernon_dapp/app/src/components/layouts/MainLayout.js",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/Box.js",[],"/home/steve/codes/algernon_dapp/app/src/fileStorage/ipfs.js",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/Users/UserList.tsx",[],"/home/steve/codes/algernon_dapp/app/src/queries/tag.tsx",["584"],"import { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Tag as TagType } from 'theGraphTypes';\nimport { SelectedTag } from '../selectors/types';\nimport selectTopic from '../selectors/topic';\n\ninterface TagQueryVars {\n  skip?: number,\n  first?: number,\n  ids?: string[],\n  id?: string\n}\n\ninterface GetTagsData {\n  tags: SelectedTag[]\n}\n\ninterface GetTagData {\n  tag: SelectedTag\n}\n\nexport const GET_TAGS = gql`\n  query tags($skip: Int!, $first: Int!){\n    tags(skip: $skip, first: $first) {\n      id\n      tag\n    }\n}\n`;\n\nexport const useGetTags = (client: any, skip: number, first: number) => {\n  const {loading, error, data} =  useQuery<GetTagsData, TagQueryVars>(\n    GET_TAGS,\n    {\n      client,\n      variables: {\n        skip,\n        first\n      },\n      fetchPolicy: 'no-cache'\n    });\n\n  return {\n    loading,\n    error,\n    tags: data ? data.tags : null\n  } \n}\n\nexport const GET_TAG = gql`\n  query tag($id: String!){\n    tag(id: $id) {\n      id\n      tag\n      topics(orderBy: totalStaked, orderDirection: desc) {\n        id\n        topic {\n          id\n          owner {\n            address\n          }\n          tags(orderBy: totalStaked, orderDirection: desc, where: {active: true}) {\n            id\n            totalStaked\n            tag {\n              id\n              tag\n            }\n          }\n          title\n          description\n          url\n        }\n      }\n    }\n}\n`;\n\nexport const useGetTag = (client: any, id: string) => {\n  const {loading, error, data} = useQuery<GetTagData, TagQueryVars>(\n    GET_TAG,\n    {\n      client,\n      variables: {id},\n      fetchPolicy: 'no-cache'\n    });\n  return {\n    loading,\n    error,\n    // @ts-ignore\n    tag: data ? { ...data.tag, topics: data.tag.topics.map(t => t.topic).map(selectTopic)} : null\n  } \n}\n\nexport const GET_FILTERED_TAGS = gql`\n  query tags($tag_contains: String!, $first: Int!){\n    tags(where: {tag_contains: $tag_contains}, first: $first) {\n      id\n      tag\n      topics {\n        id\n        topic {\n          id\n        }\n      }\n    }\n}\n`;\n\nexport const getFilteredTags = (client: any, tag_contains: string) => {\n  const limit = 50\n  return client.query(\n    {\n      query: GET_FILTERED_TAGS,\n      variables: {tag_contains, first: limit}\n    });\n}","/home/steve/codes/algernon_dapp/app/src/queries/topic.tsx",["585","586"],"import { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport web3 from 'web3'\nimport { Topic as TopicType } from 'theGraphTypes';\nimport selectTopic from '../selectors/topic'\nimport { SelectedTopic } from '../selectors/types'\n\ninterface TopicListQueryVars {\n  skip?: number,\n  first?: number,\n  ids?: string[],\n  owner?: string\n}\n\ninterface TopicItemQueryVars {\n  id: string\n}\n\ninterface GetTopicsData {\n  topics: SelectedTopic[]\n}\n\ninterface GetTopicData {\n  topic: SelectedTopic\n}\n\n const fragments = {\n  comment: gql`\n    fragment CommentsPageComment on Comment {\n      id\n      postedBy {\n        login\n        html_url\n      }\n      createdAt\n      content\n    }\n  `,\n};\n\nexport const GET_TOPICS = gql`\n  query topics($skip: Int!, $first: Int!){\n    topics(skip: $skip, first: $first) {\n      id\n      createdAt\n      updatedAt\n      tags(orderBy: totalStaked, orderDirection: desc) {\n        id\n        totalStaked\n        tag {\n          id\n          tag\n        }\n      }\n      owner {\n        address\n      }\n      title\n      description\n      url\n    }\n}\n`;\n\nexport const useGetTopics = (client: any, skip: number, first: number) => {\n  const {loading, error, data} =  useQuery<GetTopicsData, TopicListQueryVars>(GET_TOPICS, {client, variables: {skip, first}});\n\n  return {\n    loading,\n    error,\n    topics: data ? data.topics.map(selectTopic) : null\n  } \n}\n\nexport const GET_TOPICS_BY_ID = gql`\n  query topics($skip: Int!, $first: Int!, $ids: [String!]!){\n    topics(skip: $skip, first: $first, where: {id_in: $ids} ) {\n      id\n      createdAt\n      updatedAt\n      title\n      description\n      url\n      tags(orderBy: totalStaked, orderDirection: desc) {\n        id\n        totalStaked\n        tag {\n          id\n          tag\n        }\n      }\n      owner {\n        address\n      }\n    }\n}\n`;\n\nexport const useGetTopicsById = (client: any, skip: number, first: number, ids: string[]) => {\n  const {loading, error, data, refetch} =  useQuery<GetTopicsData, TopicListQueryVars>(GET_TOPICS_BY_ID, {client, variables: {skip, first, ids}});\n\n  return {\n    loading,\n    error,\n    refetch,\n    topics: data ? data.topics : null\n  } \n}\n\nexport const GET_TOPICS_FOR_OWNER = gql`\n  query topics($skip: Int!, $first: Int!, $owner: String!){\n    topics(skip: $skip, first: $first, where: {owner: $owner}) {\n      id\n      createdAt\n      updatedAt\n      tags(orderBy: totalStaked, orderDirection: desc) {\n        totalStaked\n        id\n        tag {\n          id\n          tag\n        }\n      }\n      title\n      description\n      url\n    }\n}\n`\n\nexport const useGetTopicsForOwner = (client: any, skip: number, first: number, owner: string) => {\n  const checksummedAddress = web3.utils.toHex(owner)\n  const {loading, error, data, refetch} =  useQuery<GetTopicsData, TopicListQueryVars>(\n    GET_TOPICS_FOR_OWNER,\n    {\n      client,\n      variables: {\n        skip,\n        first,\n        owner:checksummedAddress\n      },\n      fetchPolicy: 'no-cache'\n    });\n  return {\n    loading,\n    error,\n    refetch,\n    topics: data ? data.topics.map(selectTopic) : null\n  } \n}\n\nexport const GET_TOPIC = gql`\n  query topic($id: String!){\n    topic(id: $id) {\n      id\n      createdAt\n      updatedAt\n      tags(orderBy: totalStaked, orderDirection: desc) {\n        id\n        totalStaked\n        tag {\n          id\n          tag\n        }\n      }\n      owner {\n        address\n      }\n      title\n      description\n      url\n      notes\n      requires {\n        id\n        title\n        url\n        description\n        owner {\n          id\n          address\n        }\n      }\n      supports {\n        id\n        title\n        url\n        description\n        owner {\n          id\n          address\n        }\n      }\n    }\n}\n`;\n\nexport const useGetTopic = (client: any, id: string) => {\n  const {loading, error, data, refetch} = useQuery<GetTopicData, TopicItemQueryVars>(\n    GET_TOPIC,\n    {client,\n      variables: {id},\n      fetchPolicy: 'no-cache'\n    });\n    \n  return {\n    loading,\n    error,\n    refetch,\n    topic: data ? selectTopic(data.topic) : null\n  } \n}","/home/steve/codes/algernon_dapp/app/src/utils/web3.ts",[],"/home/steve/codes/algernon_dapp/app/src/components/molecules/topics/Detail.tsx",["587","588"],"// @ts-nocheck\n\nimport React, { Fragment } from 'react'\nimport Paper from '../../atoms/Paper'\nimport Chip from '../../atoms/Chip'\nimport Link from '../../atoms/Link'\nimport Box from '../../atoms/Box'\nimport Flex from '../../atoms/Flex'\nimport RichText from '../../atoms/RichText'\nimport Badge from '../user/Badge'\n// import MetaAndForm from './MetaAndForm'\nimport NotesAndForm from './NotesAndForm'\nimport UpdateTopicMetaForm from '../../organisms/forms/UpdateTopicMeta'\nimport { convertToChecksum } from '../../../utils/web3'\nimport TagBadge from '../tags/TagBadge'\nimport CreateStakeForm from '../../organisms/forms/CreateStake'\nimport UpdateStakeForm from '../../organisms/forms/UpdateStake'\n\n\nconst equalAddresses = (addressA: string, addressB: string) => {\n  return typeof addressA === 'string' && typeof addressB === 'string' && addressA.toLowerCase() === addressB.toLowerCase()\n}\n\ntype TopicDetailProps = {\n  connectedAddress: string,\n  tagOptions: string[],\n  topicOptions: string[],\n  topic: any,\n  refetchTopic: any,\n  algernonInstance: any,\n  userStakes: any\n}\n\nconst RelatedCourse = (props:any) => {\n  const topic = props.topic\n\n  return (\n    <Paper>\n      <Link to={`/topic/${topic.id}`} element={<h4>{topic.title}</h4>} />\n      <p>{topic.description}</p>\n    </Paper>\n  )\n}\n\nconst TopicTags = ({tags, connectedAddress, algernonInstance, topicId, topicTitle, userStakes}) => {\n  return tags.map(tag => {\n    const existingStake = userStakes && userStakes.find(s => s.tagId === tag.id)\n    const trigger = algernonInstance ?\n      existingStake ?\n        <UpdateStakeForm\n          connectedAddress={connectedAddress}\n          algernonInstance={algernonInstance}\n          stake={existingStake}\n          topicTitle={topicTitle}\n          tag={tag.tag}\n        /> \n        :\n        <CreateStakeForm\n          connectedAddress={connectedAddress}\n          algernonInstance={algernonInstance}\n          topicId={topicId}\n          tagId={tag.id}\n          topicTitle={topicTitle}\n          tag={tag.tag}\n        />\n      : null\n    return <TagBadge key={tag.id} tag={tag} stakeTrigger={trigger} />\n  })\n}\n\nconst Detail = (props: TopicDetailProps): React.ReactNode => {\n  const { connectedAddress, algernonInstance, topic, topicOptions, tagOptions, refetchTopic, userStakes } = props\n  const { id, title, url, description, owner, notes, requires, supports, tags, updatedAt } = topic\n  const containerStyle = { margin:\"2em\", padding: \"2em\" }\n  const address = convertToChecksum(owner.address)\n\n  const isOwner = equalAddresses(address, connectedAddress)\n  const createdEl = (\n    <div style={{color: '#808080', marginTop: '.5em', fontStyle: 'italic', fontSize: '.9em'}}>\n      Last Updated: {new Date(1000*updatedAt).toLocaleDateString()}\n    </div>\n  )\n\n  const Notes: React.FC = () => (\n    <Flex flexDirection=\"column\" style={{ margin:\"1em\", padding: \"1em\" }}>\n      <h3>Curriculum</h3>\n      <Paper>\n        <RichText value={notes} />\n      </Paper>\n    </Flex>\n  )\n  console.log(`inside detail alg insance ${algernonInstance}`)\n  const MetaDetails: React.FC = () => (\n    <div style={{marginTop: '2em'}}>\n      <Flex>\n        {isOwner &&\n          <UpdateTopicMetaForm\n            connectedAddress={connectedAddress}\n            algernonInstance={algernonInstance}\n            topic={topic} \n            topicOptions={topicOptions}\n            tagOptions={tagOptions}\n            refetchTopic={refetchTopic}\n          />\n        }\n      </Flex>\n      <Paper style={containerStyle}>\n        <Flex flexDirection=\"column\">\n          <Flex>\n            <Box style={{width: '70%'}}>\n              <h1>{title}</h1>\n            </Box>\n            <Box style={{width: '25%'}}>\n              <Badge address={address} subEl={createdEl} />\n            </Box>\n          </Flex>\n          <Box>\n            {description}\n          </Box>\n          <Box>\n            <a target=\"blank\" href={url}>{url}</a>\n          </Box>\n          <Box>\n            <TopicTags\n              tags={tags}\n              algernonInstance={algernonInstance}\n              connectedAddress={connectedAddress}\n              topicId={topic.id}\n              topicTitle={topic.title}\n              userStakes={userStakes}\n            />\n          </Box>\n          <Flex justifyContent=\"space-around\">\n            <Flex flexDirection=\"column\" style={{width: '50%'}}>\n              <h3>Requires Courses</h3>\n              {requires.length ? requires.map(topic => <RelatedCourse id={topic.id} topic={topic} />) : '-'}\n            </Flex>\n            <Flex flexDirection=\"column\">\n              <h3>Supports Courses</h3> {supports.length ? supports.map(topic => <RelatedCourse id={topic.id} topic={topic}  />) : '-'}\n            </Flex>\n          </Flex>\n        </Flex>\n      </Paper>\n    </div>\n  )\n\n  /*\n  const editableMeta = (\n    <MetaAndForm\n      formProps ={{\n        connectedAddress,\n        algernonInstance,\n        topic,\n        topicOptions,\n        tagOptions,\n        refetchTopic\n      }}\n      defaultContent={<MetaDetails />} \n    />\n  )\n  */\n\n  const editableNotes = (\n    <NotesAndForm\n      formProps ={{\n        connectedAddress,\n        algernonInstance,\n        topic,\n        refetchTopic\n      }}\n      defaultContent={<Notes />} \n    />\n  )\n\n\n  \n  return (\n    <Fragment>\n      <MetaDetails />\n      {isOwner? editableNotes : <Notes />}\n    </Fragment>\n  )\n}\n\nexport default Detail","/home/steve/codes/algernon_dapp/app/src/components/organisms/Tags/TagDetail.js",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/Profile/ProfileMain.js",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/Topics/TopicList.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/Admin/Main.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/Flex.js",[],"/home/steve/codes/algernon_dapp/app/src/components/materialDashboard/components/SidebarNav.js",[],"/home/steve/codes/algernon_dapp/app/src/components/materialDashboard/components/ImageCard.js",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/Link.js",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/Tags/TagList.js",[],"/home/steve/codes/algernon_dapp/app/src/components/molecules/user/Badge.js",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/RichText.js",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/Chip.js",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/UpdateTopicMeta.js",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/CreateTopic.js",[],"/home/steve/codes/algernon_dapp/app/src/selectors/topic.ts",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/Paper.js",[],"/home/steve/codes/algernon_dapp/app/src/components/molecules/topics/NotesAndForm.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/molecules/user/BlockieAddress.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/molecules/topics/ListItem.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/Tags/TagsAdmin.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/molecules/admin/Roles.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/Address.js",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/Blockie.js",[],"/home/steve/codes/algernon_dapp/app/src/components/molecules/common/LoadingCard.js",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/buttons/Button.js",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/UpdateTopicNotes.js",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/CreateTag.js",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/Role.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/Loading.js",[],"/home/steve/codes/algernon_dapp/app/src/utils/formatters/index.js",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/RichText.js",[],"/home/steve/codes/algernon_dapp/app/src/schemas/topic.js",[],"/home/steve/codes/algernon_dapp/app/src/components/formikTLDR/forms/utils.js",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/Text.js",[],"/home/steve/codes/algernon_dapp/app/src/components/formikTLDR/forms/CallAndWeb3Form.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/formikTLDR/forms/Web3Form.tsx",[],"/home/steve/codes/algernon_dapp/app/src/schemas/admin.ts",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/ErrorMessage.js",[],"/home/steve/codes/algernon_dapp/app/src/schemas/common.js",[],"/home/steve/codes/algernon_dapp/app/src/components/formikTLDR/forms/common.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/Select.js",[],"/home/steve/codes/algernon_dapp/app/src/schemas/tag.js",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/Modal.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/ConnectedWallet/index.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/SelectWallet.tsx",[],"/home/steve/codes/algernon_dapp/app/src/schemas/wallet.ts",[],"/home/steve/codes/algernon_dapp/app/src/components/formikTLDR/forms/BasicForm.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/logos/Fortmatic.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/CardSelect.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/logos/MetaMask.tsx",[],"/home/steve/codes/algernon_dapp/app/src/utils/wallets/index.ts",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/CardItem.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/logos/Base.tsx",[],"/home/steve/codes/algernon_dapp/app/src/utils/wallets/fortmatic.ts",[],"/home/steve/codes/algernon_dapp/app/src/utils/wallets/metamask.ts",[],"/home/steve/codes/algernon_dapp/app/src/utils/wallets/base.ts",[],"/home/steve/codes/algernon_dapp/app/src/queries/user.tsx",["589","590"],"import { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport web3 from 'web3'\nimport selectTopic from '../selectors/topic'\nimport { SelectedTopic } from '../selectors/types'\nimport { nativeToDisplayBalance } from '../utils/formatters';\nimport { add } from 'lodash';\n\ninterface UserQueryVars {\n  owner?: string\n}\n\ninterface UserData {\n  user: {\n    stakedBalance: string,\n    unstakedBalance: string,\n    undepositedBalance: string\n  }\n}\n\nexport const GET_OWNER_BY_ADDRESS = gql`\n  query user($owner: String!){\n    user(id: $owner) {\n      undepositedBalance\n      stakedBalance\n      unstakedBalance\n    }\n}\n`\n\nconst addDisplayBalances = (balances: any): any => {\n  const balanceTypes = Object.keys(balances)\n  return balanceTypes.reduce((acc, balanceType) => {\n    acc[balanceType + 'Display'] = nativeToDisplayBalance(balances[balanceType])\n    return acc\n  }, {...balances})\n}\nexport const useGetOwnerByAddress = (client: any, owner: string) => {\n  const checksummedAddress = web3.utils.toHex(owner)\n  const {loading, error, data, refetch} =  useQuery<UserData, UserQueryVars>(\n    GET_OWNER_BY_ADDRESS,\n    {\n      client,\n      variables: {\n        owner:checksummedAddress\n      },\n      fetchPolicy: 'no-cache'\n    });\n\n  const defaultBalances = { \n    undepositedBalance: \"0\",\n    unstakedBalance: \"0\",\n    stakedBalance: \"0\"\n  }\n\n  const user = data ?\n    data.user ?\n      addDisplayBalances(data.user)\n      :\n      addDisplayBalances(defaultBalances)\n    : addDisplayBalances(defaultBalances)\n\n  return {\n    loading,\n    error,\n    refetch,\n    user\n  } \n}\n","/home/steve/codes/algernon_dapp/app/src/components/organisms/Profile/TokenBalances.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/DepositTokens.tsx",[],"/home/steve/codes/algernon_dapp/app/src/schemas/token.js",[],["591","592"],"/home/steve/codes/algernon_dapp/app/src/components/atoms/icons/Stake.js",[],"/home/steve/codes/algernon_dapp/app/src/components/molecules/tags/TagBadge.js",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/CreateStake.tsx",["593","594"],"import React from 'react'\nimport { Form } from 'formik'\nimport { createStakeSchema } from '../../../schemas/stake'\nimport Select from '../../atoms/inputs/Select'\nimport Web3Form from '../../formikTLDR/forms/Web3Form'\nimport Text from '../../atoms/inputs/Text'\nimport Button from '../../atoms/inputs/buttons/Button'\nimport Modal from '../../atoms/Modal'\nimport Box from '../../atoms/Box'\nimport StakeIcon from '../../atoms/icons/Stake'\nimport { displayToNativeBalance } from '../../../utils/formatters'\n\nconst Success = () => (\n  <div>\n    <h3>Stake Successful!</h3>\n  </div>\n)\n\nconst getForm = (tag: string, topicTitle: string) => (submit: any, isValid: boolean) => (\n  <Form>\n    <div>Stake on</div>\n    <div>{topicTitle}</div>\n    <div>and {tag}</div>\n    <div style={{padding: '2em 0'}}>\n      <Text\n        label=\"Stake Amount\"\n        name=\"amount\"\n        type=\"number\" \n      />\n    </div>\n    <Button\n      label=\"Submit Stake\"\n      onClick={submit}\n      disabled={!isValid}\n    />\n  </Form>\n)\n\nconst getMethodArgs = (topicId: string, tagId: string) => (values: any) => {\n  return [topicId, tagId, displayToNativeBalance(values.amount)]\n}\n\nconst CreateStakeForm = ({ connectedAddress, algernonInstance, topicId, tagId, tag, topicTitle }: any) => {\n  const formProps = {\n    defaultValues: createStakeSchema.defaultValues,\n    schema: createStakeSchema.schema,\n    getForm: getForm(tag, topicTitle),\n    contractMethod: algernonInstance.methods.addStake,\n    connectedAddress,\n    getMethodArgs: getMethodArgs(topicId, tagId),\n    stateEls: {\n      successEl: Success\n    },\n    formOnSuccess: false\n  }\n  return (\n    <Modal\n      triggerText=''\n      trigger={<StakeIcon />}\n      title=''\n      contentText=''\n      getForm={(cancelForm: any) => {\n        return (\n          <Web3Form\n            formProps={{...formProps, cancelForm}}\n          />\n        )\n      }}\n    />\n  )\n}\n\nexport default CreateStakeForm","/home/steve/codes/algernon_dapp/app/src/schemas/stake.js",[],"/home/steve/codes/algernon_dapp/app/src/queries/stake.tsx",[],"/home/steve/codes/algernon_dapp/app/src/selectors/stake.ts",["595","596"],"import { map } from 'lodash'\nimport { createSelector } from 'reselect'\nimport { nativeToDisplayBalance } from '../utils/formatters'\nimport { convertToChecksum } from '../utils/web3'\n\nconst getStake = (taggedTopics: any):any => {\n  return taggedTopics\n}\n\nconst formatStake = (taggedTopic: any) => {\n  const stake = taggedTopic.stakes[0]\n  if (stake) {\n    return {\n      ...stake,\n      displayAmount: nativeToDisplayBalance(stake.amount),\n      tagId: taggedTopic.tag.id\n    }\n  }\n\n  return null\n}\n\nconst selectUserStakesForTopic = createSelector(\n  [getStake],\n  (taggedTopics) => {\n    return taggedTopics.map(formatStake).filter( (s:any) => s)\n  }\n)\n\nexport default selectUserStakesForTopic","/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/UpdateStake.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/Radio.js",["597"],"import React from 'react'\nimport { useField } from 'formik'\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport ErrorMessage from './ErrorMessage';\n\nconst RadioUI = (props) => {\n  const [field, meta] = useField(props);\n  const isError = meta.touched && !!meta.error\n  const radioOptions = props.optionItems || \n    props.options.map(\n      (o => <FormControlLabel key={o.value} value={o.value} label={o.label} control={<Radio />} />)\n    )\n\n  return (\n    <FormControl style={props.style}>\n      <FormLabel>{props.label}</FormLabel>\n      <RadioGroup\n        {...field}\n        {...props}\n      >\n        {radioOptions}\n      </RadioGroup>\n      <ErrorMessage\n        isError={isError}\n        errorMsg={meta.error} />\n    </FormControl>\n  )\n}\n\n  const styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: theme.spacing.unit / 4,\n  },\n  noLabel: {\n    marginTop: theme.spacing.unit * 3,\n  },\n});\n\nexport default withStyles(styles)(RadioUI)","/home/steve/codes/algernon_dapp/app/src/selectors/user.ts",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/Stakes/StakeList.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/molecules/stakes/TopicStakesListItem.tsx",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/index.js",[],["598","599"],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/App.js",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/serviceWorker.js",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/utils/apolloClient.js",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/config.js",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/pages/Overview.js",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/pages/Validators.jsx",["600"],"import React from 'react'\nimport AppPage from '../common/AppPage'\nimport './Validators.scoped.css'\nimport IndexersTable from '../staking/theGraphProtocol/IndexersTable'\n\n\nconst Validators = ({}) => {\n\n  return (\n    <AppPage loading={{loading: false}}>\n \n        <div className=\"filterContainer\">filters TBD</div>\n        <IndexersTable />\n \n    </AppPage>\n\n  )\n}\n\nexport default Validators\n","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/utils/address.js",["601"],"import bech32 from \"bech32\"\n\nconst getAddressType = (address) => {\n  if (address.startsWith(\"0x\")) return \"ethereum\"\n  try {\n    bech32.decode(address)\n    return \"cosmos\"\n  } catch (error) {\n    // ignore error\n  }\n  return \"any\"\n}\n\nexport const formatAddress = (address, length = 4) => {\n  if (!address) {\n    return `Address Not Found`\n  }\n  switch (getAddressType(address)) {\n    case \"cosmos\":\n      return address.split(`1`)[0] + `…` + address.slice(-1 * length)\n    case \"ethereum\":\n      return address.slice(0, 2 + length) + `…` + address.slice(-1 * length)\n    case \"any\":\n      return address.slice(0, length) + `…` + address.slice(-1 * length)\n  }\n}","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/TmDataLoading.jsx",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/TmPage.jsx",[],["602","603"],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/staking/TableValidators.jsx",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/staking/PanelSort.jsx",["604"],"import React from 'react'\nimport { MdArrowDropUp } from 'react-icons/md'\nimport './PanelSort.scoped.scss'\n\nconst SortHeader = ({sort, title, value, tooltip, updateSort, toggleDirection, active, sortDirection}) => {\n  const headerClass = `sort-by panel-sort-table-header ${active ? 'active' : ''} ${active && sortDirection === 0 ? 'asc' : ''} ${active && sortDirection === 1 ? 'desc' : ''}`\n\n  return (\n    <th\n      className={headerClass}\n    >\n      { sort ?\n        <a className=\"sort-by-link\">\n          <span onClick={() => updateSort(value)}>{ title }</span>\n          <MdArrowDropUp onClick={toggleDirection} className=\"material-icons notranslate\" />\n        </a>\n        :\n        <span>{ title }</span>\n      }\n    </th>\n  )\n}\n\nconst PanelSort = ({sortField, properties, sortDirection, setSortField, toggleDirection}) => {\n \n\n  const sortFields = properties.map(p => <SortHeader key={p.value} {...p} updateSort={setSortField} toggleDirection={toggleDirection} sort={p.sortable} active={p.value === sortField} sortDirection={sortDirection} />)\n  return (\n    <thead>\n    <tr className={`panel-sort-container`}>\n      \n        <th>#</th>\n        {sortFields}\n    </tr>\n    </thead>\n  )\n}\n\nexport default PanelSort\n","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/queries/indexers.tsx",[],["605","606"],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/selectors/indexer.ts",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/utils/helpers.ts",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/utils/formatters/index.js",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/Avatar.tsx",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/AppPage.tsx",["607"],"import React from 'react'\nimport AppHeader from './AppHeader'\nimport UserMenu from '../account/UserMenu'\nimport TmDataLoading from './TmDataLoading'\n\nconst AppPage = ({children}: {children: any}) => {\n  const themeClass = 'lunie-light'\n\n  return (\n    <div id=\"app\" className={`${themeClass} page`}>\n      <AppHeader />\n      <div id=\"app-content\">\n        <div id=\"bar-container\">\n        </div>\n        <UserMenu\n          user={null}\n          address={null}\n          sessionType={null}\n          ledgerAddressError={null}\n        />\n        <div className='page-content'>\n          {children}\n        </div>\n      </div>\n  \n    </div>\n\n  )\n}\n\nexport default AppPage","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/AppHeader.tsx",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/account/UserMenu.jsx",["608","609"],"import React, { useState, useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MdNotifications, MdBuild, MdExitToApp, MdAddCircle } from 'react-icons/md'\nimport { WalletContext } from '../providers/WalletProvider'\nimport UserAccountRow from './UserAccountRow'\nimport UserMenuAddress from './UserMenuAddress'\nimport Avatar from '../common/Avatar'\nimport Web3Modal from \"./Web3Modal\";\nimport './UserMenu.scoped.css'\n\nconst LiAddress = ({ address, selectedAddress, selectAddress, selectedNetwork }) => {\n  return (\n\n      <UserAccountRow\n        address={address}\n        onClick={() => selectAddress(address)}\n      />\n  )\n}\n\nconst ModalContent = ({user, addresses, closeModal, signIn, signOut}) => {\n  return (\n    <div slot=\"popover\">\n      <div className=\"user-popover\">\n        <h3 className=\"email\">{ (user && user.email) || `Anonymous User` }</h3>\n      </div>\n      <div className=\"address-list\">\n        {addresses.map(a => <LiAddress key={a.address} {...a} />)}\n      </div>\n      <div\n        id=\"create-new-account\"\n        className=\"menu-list-item\"\n      >\n        <span>Add an address</span>\n        <MdAddCircle className=\"material-icons\" />\n      </div>\n      <div\n        id=\"manage-accounts\"\n        className=\"menu-list-item\"\n      >\n        <span>Manage Addresses</span>\n        <MdBuild className=\"material-icons\" />\n      </div>\n      { user && user.userSignedIn ? \n        <div>\n          <div\n            className=\"menu-list-item\"\n            onClick={closeModal}\n          >\n            <span>Settings</span>\n            <i className=\"material-icons\">settings</i>\n          </div>\n          <div\n            className=\"menu-list-item\"\n            onClick=\"closeModal\"\n          >\n            <span>Manage Subscription</span>\n            <i className=\"material-icons\">payment</i>\n          </div>\n          <div className=\"menu-list-item outline\"\n            onClick={signOut}\n          >\n            <span>Logout</span>\n            <MdExitToApp className=\"material-icons\" />\n          </div>\n        </div>\n      :\n        <div>\n          <div\n            className=\"menu-list-item outline\"\n            onClick={signIn}\n          >\n            <span>Sign In</span>            \n          </div>\n        </div>\n      }\n    </div>\n  )\n}\nconst UserMenu = ({user, sessionType, ledgerAddressError}) => {\n  const [showModal, setShowModal] = useState(false)\n  const { wallet, setWallet, address } = useContext(WalletContext)\n\n  const onConnect = (provider) => {\n    setWallet({\n      walletType: 'METAMASK',\n      wallet: provider,\n      address: provider.selectedAddress,\n      provider,\n      GRTInstance: null\n    })\n  }\n\n  return (\n\n      <div className=\"user-menu\" onClick={() => setShowModal(true)}>\n        { address ? \n          <UserMenuAddress\n            address={address}\n            sessionType={sessionType}\n          />\n          :\n          <div>Sign In</div>\n        }\n        <Link to='/notifications'\n          className=\"user-menu-icon-container notifications\"\n        >\n          <MdNotifications className=\"material-icons\" />\n        </Link>\n        <div className=\"avatar-container\" >\n          { user &&\n            <span className=\"user-menu-icon-container tooltip-target\">\n              <i className=\"material-icons\">person</i>\n            </span>\n          }\n          { user && \n            <Avatar\n              className=\"avatar tooltip-target\"\n              address={user ? user.email : ''}\n              human={true}\n            />\n          }\n        </div>\n          { showModal ?\n            <Web3Modal onConnect={onConnect} /> // <Modal content={<ModalContent addresses={[]} />} isOpen={true} close={() => setShowModal(false)} />\n            :\n            null\n          }\n\n      </div>\n  \n  )\n}\n\nexport default UserMenu\n","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/AppMenu.tsx",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/Modal.jsx",[],["610","611"],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/account/UserMenuAddress.tsx",["612"],"import React from 'react'\nimport Address from '../common/Address'\nimport './UserMenuAddress.scoped.css'\n\nconst UserMenuAddress = ({ address, sessionType }: { address: string, sessionType: string }) => {\n\n  return (\n   \n      <div className=\"address\">\n        <div  className=\"menu-address\">\n        <Address address={address} />\n        </div>\n        { sessionType === 'ledger' && \n          <div className=\"show-on-ledger-container\">\n            <a className=\"show-on-ledger\">\n              Show on Ledger\n            </a>\n          </div>\n        }\n      </div>\n  \n  )\n}\n\nexport default UserMenuAddress\n","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/account/UserAccountRow.jsx",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/Address.tsx",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/staking/theGraphProtocol/LiValidator.tsx",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/staking/theGraphProtocol/tableFields.js",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/staking/theGraphProtocol/IndexersTable.tsx",["613","614"],"import React, { useState } from 'react'\nimport ReactToolTip from 'react-tooltip'\n\nimport { GetIndexers } from '../../../queries/indexers'\nimport TmDataLoading from '../../common/TmDataLoading'\nimport PanelSort from '../PanelSort'\nimport LiValidator from './LiValidator'\nimport tableFields from './tableFields'\n\nconst DIRECTIONS = ['asc', 'desc']\n\nconst initialState = {\n  sortField: null,\n  sortDirection: 1\n}\n\nconst SORT_STATE = {\n  sortField: 'stakedTokens',\n  sortDirection: 'desc',\n  properties: tableFields\n}\n\nconst PAGINATION_STATE = {\n  first: 20,\n  skip: 0\n}\n\nconst IndexersTable = () => {\n  const [state, setState] = useState({...initialState, ...SORT_STATE, sortDirection: SORT_STATE.sortDirection === 'asc' ? 0 : 1})\n\n  const toggleDirection = () => {\n    console.log('togglin')\n    const sortDirection = (state.sortDirection + 1) % 2\n    setState({...state, sortDirection})\n    updateSort(state.sortField, sortDirection === 0 ? 'asc' : 'desc')\n\n  }\n\n  const setSortField = (sortField: string) => {\n    console.log('sortin')\n    setState({...state, sortField, sortDirection: 1})\n    updateSort(sortField, 'desc')\n  }\n  \n  const {loading: loadingIndexers, indexers, error, refetch } = GetIndexers(PAGINATION_STATE.skip, PAGINATION_STATE.first, SORT_STATE.sortField, state.sortDirection === 0 ? 'asc' : 'desc')\n  const loading = {\n    loading: loadingIndexers,\n    // src:\"/img/validator-list-loading.svg\",\n    alt: 'loading table'\n  }\n\n  const updateSort = (orderBy: string, orderDirection: string) => refetch({skip: PAGINATION_STATE.skip, first: PAGINATION_STATE.first, orderBy, orderDirection })\n\n  const body = loadingIndexers ? \n    <TmDataLoading {...loading} />\n    :\n    indexers !== null ?\n      indexers.map((validator, i) => <LiValidator key={validator.id} index={i} validator={validator} />)\n      :\n      <div> error loading table</div>\n\n  return (\n    <div>\n      <ReactToolTip place='top' />\n    <table>\n      <PanelSort sortField={state.sortField} properties={state.properties} sortDirection={state.sortDirection} setSortField={setSortField} toggleDirection={toggleDirection} />\n      <tbody>\n        {body}\n      </tbody>\n    </table>\n    </div>\n  )\n\n}\n\nexport default IndexersTable \n  ","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/account/Web3Modal.jsx",["615"],"import React, { useEffect } from \"react\";\nimport Web3Modal from \"web3modal\";\n\n\n\nconst Web3ModalComp = ({onConnect}) => {\n  const web3Modal = new Web3Modal({});\n  useEffect(() => {\n    const connect = async () => {\n      const provider = await web3Modal.connect();\n      onConnect(provider)\n    }\n    connect()\n  }, [])\n  return <div></div>;\n}\n\nexport default Web3ModalComp\n\n\n","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/providers/WalletProvider.jsx",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/pages/Portfolio.jsx",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/queries/graphAccount.tsx",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/account/GraphAccountBalance.tsx",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/BalanceRow.tsx",["616","617"],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/selectors/graphAccount.ts",[],{"ruleId":"618","replacedBy":"619"},{"ruleId":"620","replacedBy":"621"},{"ruleId":"622","severity":1,"message":"623","line":1,"column":29,"nodeType":"624","messageId":"625","endLine":1,"endColumn":38},{"ruleId":"622","severity":1,"message":"626","line":1,"column":40,"nodeType":"624","messageId":"625","endLine":1,"endColumn":48},{"ruleId":"627","severity":1,"message":"628","line":42,"column":5,"nodeType":"629","endLine":42,"endColumn":7,"suggestions":"630"},{"ruleId":"618","replacedBy":"619"},{"ruleId":"620","replacedBy":"621"},{"ruleId":"622","severity":1,"message":"631","line":1,"column":8,"nodeType":"624","messageId":"625","endLine":1,"endColumn":13},{"ruleId":"632","severity":1,"message":"633","line":3,"column":17,"nodeType":"624","messageId":"625","endLine":3,"endColumn":24},{"ruleId":"632","severity":1,"message":"634","line":4,"column":19,"nodeType":"624","messageId":"625","endLine":4,"endColumn":28},{"ruleId":"632","severity":1,"message":"635","line":27,"column":8,"nodeType":"624","messageId":"625","endLine":27,"endColumn":17},{"ruleId":"632","severity":1,"message":"636","line":5,"column":8,"nodeType":"624","messageId":"625","endLine":5,"endColumn":12},{"ruleId":"632","severity":1,"message":"637","line":75,"column":11,"nodeType":"624","messageId":"625","endLine":75,"endColumn":13},{"ruleId":"632","severity":1,"message":"638","line":5,"column":10,"nodeType":"624","messageId":"625","endLine":5,"endColumn":32},{"ruleId":"632","severity":1,"message":"639","line":6,"column":10,"nodeType":"624","messageId":"625","endLine":6,"endColumn":13},{"ruleId":"618","replacedBy":"640"},{"ruleId":"620","replacedBy":"641"},{"ruleId":"632","severity":1,"message":"642","line":4,"column":8,"nodeType":"624","messageId":"625","endLine":4,"endColumn":14},{"ruleId":"632","severity":1,"message":"643","line":9,"column":8,"nodeType":"624","messageId":"625","endLine":9,"endColumn":11},{"ruleId":"632","severity":1,"message":"644","line":1,"column":10,"nodeType":"624","messageId":"625","endLine":1,"endColumn":13},{"ruleId":"632","severity":1,"message":"645","line":4,"column":10,"nodeType":"624","messageId":"625","endLine":4,"endColumn":27},{"ruleId":"622","severity":1,"message":"646","line":4,"column":8,"nodeType":"624","messageId":"625","endLine":4,"endColumn":18},{"ruleId":"618","replacedBy":"647"},{"ruleId":"620","replacedBy":"648"},{"ruleId":"649","severity":1,"message":"650","line":7,"column":21,"nodeType":"651","messageId":"652","endLine":7,"endColumn":23},{"ruleId":"653","severity":1,"message":"654","line":18,"column":3,"nodeType":"655","messageId":"656","endLine":25,"endColumn":4},{"ruleId":"618","replacedBy":"657"},{"ruleId":"620","replacedBy":"658"},{"ruleId":"659","severity":1,"message":"660","line":13,"column":9,"nodeType":"661","endLine":13,"endColumn":37},{"ruleId":"618","replacedBy":"647"},{"ruleId":"620","replacedBy":"648"},{"ruleId":"632","severity":1,"message":"662","line":4,"column":8,"nodeType":"624","messageId":"625","endLine":4,"endColumn":21},{"ruleId":"622","severity":1,"message":"663","line":21,"column":7,"nodeType":"624","messageId":"625","endLine":21,"endColumn":19},{"ruleId":"622","severity":1,"message":"664","line":82,"column":11,"nodeType":"624","messageId":"625","endLine":82,"endColumn":17},{"ruleId":"618","replacedBy":"665"},{"ruleId":"620","replacedBy":"666"},{"ruleId":"659","severity":1,"message":"660","line":15,"column":13,"nodeType":"661","endLine":15,"endColumn":43},{"ruleId":"632","severity":1,"message":"667","line":10,"column":7,"nodeType":"624","messageId":"625","endLine":10,"endColumn":17},{"ruleId":"632","severity":1,"message":"668","line":45,"column":46,"nodeType":"624","messageId":"625","endLine":45,"endColumn":51},{"ruleId":"627","severity":1,"message":"669","line":14,"column":6,"nodeType":"629","endLine":14,"endColumn":8,"suggestions":"670"},{"ruleId":"632","severity":1,"message":"671","line":6,"column":11,"nodeType":"624","messageId":"625","endLine":6,"endColumn":20},{"ruleId":"632","severity":1,"message":"672","line":25,"column":7,"nodeType":"624","messageId":"625","endLine":25,"endColumn":19},"no-native-reassign",["673"],"no-negated-in-lhs",["674"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'contextValue.setClient'. Either include it or remove the dependency array.","ArrayExpression",["675"],"'React' is defined but never used.","@typescript-eslint/no-unused-vars","'TagType' is defined but never used.","'TopicType' is defined but never used.","'fragments' is assigned a value but never used.","'Chip' is defined but never used.","'id' is assigned a value but never used.","'nativeToDisplayBalance' is defined but never used.","'add' is defined but never used.",["673"],["674"],"'Select' is defined but never used.","'Box' is defined but never used.","'map' is defined but never used.","'convertToChecksum' is defined but never used.","'InputLabel' is defined but never used.",["673"],["674"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["673"],["674"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'TmDataLoading' is defined but never used.","'ModalContent' is assigned a value but never used.","'wallet' is assigned a value but never used.",["673"],["674"],"'DIRECTIONS' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onConnect' and 'web3Modal'. Either include them or remove the dependency array. If 'onConnect' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["676"],"'FiatValue' is defined but never used.","'TokenActions' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"677","fix":"678"},{"desc":"679","fix":"680"},"Update the dependencies array to be: [contextValue.setClient]",{"range":"681","text":"682"},"Update the dependencies array to be: [onConnect, web3Modal]",{"range":"683","text":"684"},[943,945],"[contextValue.setClient]",[315,317],"[onConnect, web3Modal]"]
[{"/home/steve/codes/algernon_dapp/app/src/index.js":"1","/home/steve/codes/algernon_dapp/app/src/theme.js":"2","/home/steve/codes/algernon_dapp/app/src/App.js":"3","/home/steve/codes/algernon_dapp/app/src/serviceWorker.js":"4","/home/steve/codes/algernon_dapp/app/src/utils/apolloClient.js":"5","/home/steve/codes/algernon_dapp/app/src/config.js":"6","/home/steve/codes/algernon_dapp/app/src/components/pages/Tags.js":"7","/home/steve/codes/algernon_dapp/app/src/components/pages/Overview.js":"8","/home/steve/codes/algernon_dapp/app/src/components/pages/Topic.js":"9","/home/steve/codes/algernon_dapp/app/src/components/pages/Users.js":"10","/home/steve/codes/algernon_dapp/app/src/components/providers/WalletProvider.js":"11","/home/steve/codes/algernon_dapp/app/src/components/pages/Profile.js":"12","/home/steve/codes/algernon_dapp/app/src/components/providers/FileStoreProvider.js":"13","/home/steve/codes/algernon_dapp/app/src/components/pages/Tag.tsx":"14","/home/steve/codes/algernon_dapp/app/src/components/pages/Topics.tsx":"15","/home/steve/codes/algernon_dapp/app/src/components/pages/About.tsx":"16","/home/steve/codes/algernon_dapp/app/src/components/pages/Admin.tsx":"17","/home/steve/codes/algernon_dapp/app/src/components/hooks/useGetAccount.js":"18","/home/steve/codes/algernon_dapp/app/src/components/materialDashboard/layouts/Topbar.js":"19","/home/steve/codes/algernon_dapp/app/src/components/materialDashboard/layouts/Sidebar.js":"20","/home/steve/codes/algernon_dapp/app/src/components/organisms/Tags/TagsMain.js":"21","/home/steve/codes/algernon_dapp/app/src/components/organisms/Colleges/CollegeCards.js":"22","/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/optionsFormatters.js":"23","/home/steve/codes/algernon_dapp/app/src/components/layouts/MainLayout.js":"24","/home/steve/codes/algernon_dapp/app/src/components/atoms/Box.js":"25","/home/steve/codes/algernon_dapp/app/src/fileStorage/ipfs.js":"26","/home/steve/codes/algernon_dapp/app/src/components/organisms/Users/UserList.tsx":"27","/home/steve/codes/algernon_dapp/app/src/queries/tag.tsx":"28","/home/steve/codes/algernon_dapp/app/src/queries/topic.tsx":"29","/home/steve/codes/algernon_dapp/app/src/utils/web3.ts":"30","/home/steve/codes/algernon_dapp/app/src/components/molecules/topics/Detail.tsx":"31","/home/steve/codes/algernon_dapp/app/src/components/organisms/Tags/TagDetail.js":"32","/home/steve/codes/algernon_dapp/app/src/components/organisms/Profile/ProfileMain.js":"33","/home/steve/codes/algernon_dapp/app/src/components/organisms/Topics/TopicList.tsx":"34","/home/steve/codes/algernon_dapp/app/src/components/organisms/Admin/Main.tsx":"35","/home/steve/codes/algernon_dapp/app/src/components/atoms/Flex.js":"36","/home/steve/codes/algernon_dapp/app/src/components/materialDashboard/components/SidebarNav.js":"37","/home/steve/codes/algernon_dapp/app/src/components/materialDashboard/components/ImageCard.js":"38","/home/steve/codes/algernon_dapp/app/src/components/atoms/Link.js":"39","/home/steve/codes/algernon_dapp/app/src/components/organisms/Tags/TagList.js":"40","/home/steve/codes/algernon_dapp/app/src/components/molecules/user/Badge.js":"41","/home/steve/codes/algernon_dapp/app/src/components/atoms/RichText.js":"42","/home/steve/codes/algernon_dapp/app/src/components/atoms/Chip.js":"43","/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/UpdateTopicMeta.js":"44","/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/CreateTopic.js":"45","/home/steve/codes/algernon_dapp/app/src/selectors/topic.ts":"46","/home/steve/codes/algernon_dapp/app/src/components/atoms/Paper.js":"47","/home/steve/codes/algernon_dapp/app/src/components/molecules/topics/NotesAndForm.tsx":"48","/home/steve/codes/algernon_dapp/app/src/components/molecules/user/BlockieAddress.tsx":"49","/home/steve/codes/algernon_dapp/app/src/components/molecules/topics/ListItem.tsx":"50","/home/steve/codes/algernon_dapp/app/src/components/organisms/Tags/TagsAdmin.tsx":"51","/home/steve/codes/algernon_dapp/app/src/components/molecules/admin/Roles.tsx":"52","/home/steve/codes/algernon_dapp/app/src/components/atoms/Address.js":"53","/home/steve/codes/algernon_dapp/app/src/components/atoms/Blockie.js":"54","/home/steve/codes/algernon_dapp/app/src/components/molecules/common/LoadingCard.js":"55","/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/buttons/Button.js":"56","/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/UpdateTopicNotes.js":"57","/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/CreateTag.js":"58","/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/Role.tsx":"59","/home/steve/codes/algernon_dapp/app/src/components/atoms/Loading.js":"60","/home/steve/codes/algernon_dapp/app/src/utils/formatters/index.js":"61","/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/RichText.js":"62","/home/steve/codes/algernon_dapp/app/src/schemas/topic.js":"63","/home/steve/codes/algernon_dapp/app/src/components/formikTLDR/forms/utils.js":"64","/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/Text.js":"65","/home/steve/codes/algernon_dapp/app/src/components/formikTLDR/forms/CallAndWeb3Form.tsx":"66","/home/steve/codes/algernon_dapp/app/src/components/formikTLDR/forms/Web3Form.tsx":"67","/home/steve/codes/algernon_dapp/app/src/schemas/admin.ts":"68","/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/ErrorMessage.js":"69","/home/steve/codes/algernon_dapp/app/src/schemas/common.js":"70","/home/steve/codes/algernon_dapp/app/src/components/formikTLDR/forms/common.tsx":"71","/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/Select.js":"72","/home/steve/codes/algernon_dapp/app/src/schemas/tag.js":"73","/home/steve/codes/algernon_dapp/app/src/components/atoms/Modal.tsx":"74","/home/steve/codes/algernon_dapp/app/src/components/organisms/ConnectedWallet/index.tsx":"75","/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/SelectWallet.tsx":"76","/home/steve/codes/algernon_dapp/app/src/schemas/wallet.ts":"77","/home/steve/codes/algernon_dapp/app/src/components/formikTLDR/forms/BasicForm.tsx":"78","/home/steve/codes/algernon_dapp/app/src/components/atoms/logos/Fortmatic.tsx":"79","/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/CardSelect.tsx":"80","/home/steve/codes/algernon_dapp/app/src/components/atoms/logos/MetaMask.tsx":"81","/home/steve/codes/algernon_dapp/app/src/utils/wallets/index.ts":"82","/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/CardItem.tsx":"83","/home/steve/codes/algernon_dapp/app/src/components/atoms/logos/Base.tsx":"84","/home/steve/codes/algernon_dapp/app/src/utils/wallets/fortmatic.ts":"85","/home/steve/codes/algernon_dapp/app/src/utils/wallets/metamask.ts":"86","/home/steve/codes/algernon_dapp/app/src/utils/wallets/base.ts":"87","/home/steve/codes/algernon_dapp/app/src/queries/user.tsx":"88","/home/steve/codes/algernon_dapp/app/src/components/organisms/Profile/TokenBalances.tsx":"89","/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/DepositTokens.tsx":"90","/home/steve/codes/algernon_dapp/app/src/schemas/token.js":"91","/home/steve/codes/algernon_dapp/app/src/components/atoms/icons/Stake.js":"92","/home/steve/codes/algernon_dapp/app/src/components/molecules/tags/TagBadge.js":"93","/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/CreateStake.tsx":"94","/home/steve/codes/algernon_dapp/app/src/schemas/stake.js":"95","/home/steve/codes/algernon_dapp/app/src/queries/stake.tsx":"96","/home/steve/codes/algernon_dapp/app/src/selectors/stake.ts":"97","/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/UpdateStake.tsx":"98","/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/Radio.js":"99","/home/steve/codes/algernon_dapp/app/src/selectors/user.ts":"100","/home/steve/codes/algernon_dapp/app/src/components/organisms/Stakes/StakeList.tsx":"101","/home/steve/codes/algernon_dapp/app/src/components/molecules/stakes/TopicStakesListItem.tsx":"102","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/index.js":"103","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/App.js":"104","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/serviceWorker.js":"105","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/utils/apolloClient.js":"106","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/config.js":"107","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/pages/Overview.js":"108","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/pages/Validators.jsx":"109","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/utils/address.js":"110","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/TmDataLoading.jsx":"111","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/TmPage.jsx":"112","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/staking/TableValidators.jsx":"113","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/staking/PanelSort.jsx":"114","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/queries/indexers.tsx":"115","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/selectors/indexer.ts":"116","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/utils/helpers.ts":"117","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/utils/formatters/index.js":"118","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/Avatar.tsx":"119","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/AppPage.tsx":"120","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/AppHeader.tsx":"121","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/account/UserMenu.jsx":"122","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/AppMenu.tsx":"123","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/Modal.jsx":"124","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/account/UserMenuAddress.tsx":"125","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/account/UserAccountRow.jsx":"126","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/Address.tsx":"127","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/staking/theGraphProtocol/LiValidator.tsx":"128","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/staking/theGraphProtocol/tableFields.js":"129","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/staking/theGraphProtocol/IndexersTable.tsx":"130"},{"size":947,"mtime":1613616417826,"results":"131","hashOfConfig":"132"},{"size":103,"mtime":1603938262735,"results":"133","hashOfConfig":"132"},{"size":1885,"mtime":1608861786929,"results":"134","hashOfConfig":"132"},{"size":4948,"mtime":1593918231962,"results":"135","hashOfConfig":"132"},{"size":186,"mtime":1613616417826,"results":"136","hashOfConfig":"132"},{"size":1058,"mtime":1615174726944,"results":"137","hashOfConfig":"132"},{"size":831,"mtime":1613616417822,"results":"138","hashOfConfig":"132"},{"size":1268,"mtime":1614274342962,"results":"139","hashOfConfig":"132"},{"size":1790,"mtime":1615007846187,"results":"140","hashOfConfig":"132"},{"size":661,"mtime":1613616417826,"results":"141","hashOfConfig":"132"},{"size":1751,"mtime":1615007846187,"results":"142","hashOfConfig":"132"},{"size":1813,"mtime":1615140292872,"results":"143","hashOfConfig":"132"},{"size":1092,"mtime":1613616417826,"results":"144","hashOfConfig":"132"},{"size":963,"mtime":1613616417818,"results":"145","hashOfConfig":"132"},{"size":965,"mtime":1613616417826,"results":"146","hashOfConfig":"132"},{"size":134,"mtime":1613616417818,"results":"147","hashOfConfig":"132"},{"size":1226,"mtime":1613616417818,"results":"148","hashOfConfig":"132"},{"size":236,"mtime":1613616417802,"results":"149","hashOfConfig":"132"},{"size":1563,"mtime":1603653991897,"results":"150","hashOfConfig":"132"},{"size":2218,"mtime":1608861786933,"results":"151","hashOfConfig":"132"},{"size":175,"mtime":1608861786933,"results":"152","hashOfConfig":"132"},{"size":589,"mtime":1609299891730,"results":"153","hashOfConfig":"132"},{"size":455,"mtime":1608861786933,"results":"154","hashOfConfig":"132"},{"size":576,"mtime":1613616417802,"results":"155","hashOfConfig":"132"},{"size":591,"mtime":1597543343055,"results":"156","hashOfConfig":"132"},{"size":697,"mtime":1613616417826,"results":"157","hashOfConfig":"132"},{"size":739,"mtime":1613616417810,"results":"158","hashOfConfig":"132"},{"size":2278,"mtime":1615395636022,"results":"159","hashOfConfig":"132"},{"size":4190,"mtime":1615395636022,"results":"160","hashOfConfig":"132"},{"size":672,"mtime":1615007846187,"results":"161","hashOfConfig":"132"},{"size":5513,"mtime":1615140292872,"results":"162","hashOfConfig":"132"},{"size":215,"mtime":1603729009185,"results":"163","hashOfConfig":"132"},{"size":1514,"mtime":1615140292872,"results":"164","hashOfConfig":"132"},{"size":442,"mtime":1613616417810,"results":"165","hashOfConfig":"132"},{"size":843,"mtime":1608861786933,"results":"166","hashOfConfig":"132"},{"size":196,"mtime":1593918231954,"results":"167","hashOfConfig":"132"},{"size":2005,"mtime":1597543343059,"results":"168","hashOfConfig":"132"},{"size":1495,"mtime":1613616417806,"results":"169","hashOfConfig":"132"},{"size":183,"mtime":1613616417794,"results":"170","hashOfConfig":"132"},{"size":421,"mtime":1593918231954,"results":"171","hashOfConfig":"132"},{"size":537,"mtime":1613587360038,"results":"172","hashOfConfig":"132"},{"size":305,"mtime":1613616417794,"results":"173","hashOfConfig":"132"},{"size":465,"mtime":1593918231954,"results":"174","hashOfConfig":"132"},{"size":4127,"mtime":1613930844012,"results":"175","hashOfConfig":"132"},{"size":4215,"mtime":1613713353707,"results":"176","hashOfConfig":"132"},{"size":583,"mtime":1615007846187,"results":"177","hashOfConfig":"132"},{"size":216,"mtime":1613616417794,"results":"178","hashOfConfig":"132"},{"size":1409,"mtime":1604195459259,"results":"179","hashOfConfig":"132"},{"size":431,"mtime":1613587452139,"results":"180","hashOfConfig":"132"},{"size":1041,"mtime":1615007846183,"results":"181","hashOfConfig":"132"},{"size":568,"mtime":1608861786933,"results":"182","hashOfConfig":"132"},{"size":1228,"mtime":1608861786933,"results":"183","hashOfConfig":"132"},{"size":216,"mtime":1593918231954,"results":"184","hashOfConfig":"132"},{"size":220,"mtime":1613616417794,"results":"185","hashOfConfig":"132"},{"size":253,"mtime":1613616417806,"results":"186","hashOfConfig":"132"},{"size":350,"mtime":1613616417794,"results":"187","hashOfConfig":"132"},{"size":2531,"mtime":1613712638504,"results":"188","hashOfConfig":"132"},{"size":1485,"mtime":1608861786933,"results":"189","hashOfConfig":"132"},{"size":1170,"mtime":1608861786933,"results":"190","hashOfConfig":"132"},{"size":461,"mtime":1613616417794,"results":"191","hashOfConfig":"132"},{"size":522,"mtime":1615007846187,"results":"192","hashOfConfig":"132"},{"size":572,"mtime":1613616417794,"results":"193","hashOfConfig":"132"},{"size":1515,"mtime":1593918231962,"results":"194","hashOfConfig":"132"},{"size":758,"mtime":1615007846183,"results":"195","hashOfConfig":"132"},{"size":525,"mtime":1613616417794,"results":"196","hashOfConfig":"132"},{"size":5007,"mtime":1613712900113,"results":"197","hashOfConfig":"132"},{"size":3520,"mtime":1615140292868,"results":"198","hashOfConfig":"132"},{"size":250,"mtime":1608861786933,"results":"199","hashOfConfig":"132"},{"size":182,"mtime":1613616417794,"results":"200","hashOfConfig":"132"},{"size":283,"mtime":1593918231962,"results":"201","hashOfConfig":"132"},{"size":263,"mtime":1600742087730,"results":"202","hashOfConfig":"132"},{"size":1330,"mtime":1597543343055,"results":"203","hashOfConfig":"132"},{"size":237,"mtime":1610725412572,"results":"204","hashOfConfig":"132"},{"size":1335,"mtime":1615007846183,"results":"205","hashOfConfig":"132"},{"size":589,"mtime":1613616417810,"results":"206","hashOfConfig":"132"},{"size":3867,"mtime":1615007846183,"results":"207","hashOfConfig":"132"},{"size":320,"mtime":1613178701645,"results":"208","hashOfConfig":"132"},{"size":928,"mtime":1613616417802,"results":"209","hashOfConfig":"132"},{"size":259,"mtime":1613616417802,"results":"210","hashOfConfig":"132"},{"size":1384,"mtime":1603424789787,"results":"211","hashOfConfig":"132"},{"size":253,"mtime":1613616417802,"results":"212","hashOfConfig":"132"},{"size":183,"mtime":1613616417830,"results":"213","hashOfConfig":"132"},{"size":1152,"mtime":1603425359042,"results":"214","hashOfConfig":"132"},{"size":271,"mtime":1613616417798,"results":"215","hashOfConfig":"132"},{"size":528,"mtime":1614364498930,"results":"216","hashOfConfig":"132"},{"size":478,"mtime":1613616417830,"results":"217","hashOfConfig":"132"},{"size":156,"mtime":1613616417826,"results":"218","hashOfConfig":"132"},{"size":1484,"mtime":1615140292872,"results":"219","hashOfConfig":"132"},{"size":836,"mtime":1615174726944,"results":"220","hashOfConfig":"132"},{"size":1693,"mtime":1615007846183,"results":"221","hashOfConfig":"132"},{"size":164,"mtime":1615007846187,"results":"222","hashOfConfig":"132"},{"size":325,"mtime":1615007846183,"results":"223","hashOfConfig":"132"},{"size":488,"mtime":1615007846183,"results":"224","hashOfConfig":"132"},{"size":1950,"mtime":1615140292872,"results":"225","hashOfConfig":"132"},{"size":401,"mtime":1615007846187,"results":"226","hashOfConfig":"132"},{"size":1993,"mtime":1615140292872,"results":"227","hashOfConfig":"132"},{"size":693,"mtime":1615007846187,"results":"228","hashOfConfig":"132"},{"size":2485,"mtime":1615140292872,"results":"229","hashOfConfig":"132"},{"size":1480,"mtime":1615007846183,"results":"230","hashOfConfig":"132"},{"size":1025,"mtime":1615140292872,"results":"231","hashOfConfig":"132"},{"size":471,"mtime":1615140292872,"results":"232","hashOfConfig":"132"},{"size":1009,"mtime":1615140292868,"results":"233","hashOfConfig":"132"},{"size":735,"mtime":1617733489276,"results":"234","hashOfConfig":"235"},{"size":616,"mtime":1618510771328,"results":"236","hashOfConfig":"235"},{"size":4948,"mtime":1617557245845,"results":"237","hashOfConfig":"235"},{"size":170,"mtime":1617689453389,"results":"238","hashOfConfig":"235"},{"size":909,"mtime":1617767183343,"results":"239","hashOfConfig":"235"},{"size":206,"mtime":1617735015437,"results":"240","hashOfConfig":"235"},{"size":1211,"mtime":1618507288732,"results":"241","hashOfConfig":"235"},{"size":667,"mtime":1617557245845,"results":"242","hashOfConfig":"235"},{"size":401,"mtime":1618508900452,"results":"243","hashOfConfig":"235"},{"size":1878,"mtime":1617644946611,"results":"244","hashOfConfig":"235"},{"size":1958,"mtime":1618426598235,"results":"245","hashOfConfig":"235"},{"size":1221,"mtime":1618508443920,"results":"246","hashOfConfig":"235"},{"size":2367,"mtime":1618426897671,"results":"247","hashOfConfig":"235"},{"size":1785,"mtime":1617812628315,"results":"248","hashOfConfig":"235"},{"size":381,"mtime":1617734826780,"results":"249","hashOfConfig":"235"},{"size":522,"mtime":1617557245845,"results":"250","hashOfConfig":"235"},{"size":625,"mtime":1617813843003,"results":"251","hashOfConfig":"235"},{"size":730,"mtime":1617811012781,"results":"252","hashOfConfig":"235"},{"size":3790,"mtime":1617775542668,"results":"253","hashOfConfig":"235"},{"size":3366,"mtime":1617769098098,"results":"254","hashOfConfig":"235"},{"size":2019,"mtime":1617899995312,"results":"255","hashOfConfig":"235"},{"size":568,"mtime":1617732907764,"results":"256","hashOfConfig":"235"},{"size":606,"mtime":1617768657516,"results":"257","hashOfConfig":"235"},{"size":1345,"mtime":1617768205293,"results":"258","hashOfConfig":"235"},{"size":2671,"mtime":1617729240966,"results":"259","hashOfConfig":"235"},{"size":1718,"mtime":1618509868206,"results":"260","hashOfConfig":"235"},{"size":631,"mtime":1618509829943,"results":"261","hashOfConfig":"235"},{"size":2272,"mtime":1618509611606,"results":"262","hashOfConfig":"235"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},"1isu14",{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"265"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"265"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"265"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"294"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"294"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"294"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"294"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"454"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"294"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"294"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"265"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},"q1a7j7",{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"482"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"482"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"482"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"511"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"511"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"482"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543","usedDeprecatedRules":"511"},"/home/steve/codes/algernon_dapp/app/src/index.js",[],["544","545"],"/home/steve/codes/algernon_dapp/app/src/theme.js",[],"/home/steve/codes/algernon_dapp/app/src/App.js",[],"/home/steve/codes/algernon_dapp/app/src/serviceWorker.js",[],"/home/steve/codes/algernon_dapp/app/src/utils/apolloClient.js",[],"/home/steve/codes/algernon_dapp/app/src/config.js",[],"/home/steve/codes/algernon_dapp/app/src/components/pages/Tags.js",[],"/home/steve/codes/algernon_dapp/app/src/components/pages/Overview.js",[],"/home/steve/codes/algernon_dapp/app/src/components/pages/Topic.js",["546","547"],"import React, { useContext, useEffect, useState } from 'react'\nimport MainLayout from '../layouts/MainLayout'\nimport Header from '../materialDashboard/layouts/Topbar'\nimport Sidebar from '../materialDashboard/layouts/Sidebar'\nimport TopicDetail from '../molecules/topics/Detail'\nimport { useGetTopic, useGetTopics } from '../../queries/topic'\nimport { theGraphClient } from '../../utils/apolloClient'\nimport { tagsToOptions, topicsToOptions } from '../atoms/inputs/optionsFormatters'\nimport { useGetTags } from '../../queries/tag'\nimport { WalletContext } from '../providers/WalletProvider'\nimport { useGetUserTopicStake } from '../../queries/stake'\n\nconst Topic = ({match: { params: id}}) => {\n  id = id.id\n\n  const { algernonInstance, canViewAdmin, address: connectedAddress } = useContext(WalletContext)\n  const { stakes: userStakes } = useGetUserTopicStake(theGraphClient, id, connectedAddress)\n\n  const { loading, topic, refetch: refetchTopic } = useGetTopic(theGraphClient, id)\n  const { topics } = useGetTopics(theGraphClient, 0, 100)\n  const topicOptions = topicsToOptions(topics || [])\n  const { tags } = useGetTags (theGraphClient, 0, 100)\n  const tagOptions = tagsToOptions(tags || [])\n\n  console.log(`inside topic user stakes ${JSON.stringify(userStakes, null, 2)}`)\n  const main = loading || !topic ?\n    'loading' :\n    <TopicDetail\n      connectedAddress={connectedAddress}\n      algernonInstance={algernonInstance}\n      userStakes={userStakes}\n      topic={topic}\n      topicOptions={topicOptions}\n      tagOptions={tagOptions}\n      refetchTopic={refetchTopic}\n    />\n    \n  return (\n    <MainLayout\n      header={<Header />}\n      sidebar={<Sidebar selectedAddress={connectedAddress} canViewAdmin={canViewAdmin} />}\n      main={ main }\n    />\n  )\n}\n\nexport default Topic\n","/home/steve/codes/algernon_dapp/app/src/components/pages/Users.js",[],"/home/steve/codes/algernon_dapp/app/src/components/providers/WalletProvider.js",[],"/home/steve/codes/algernon_dapp/app/src/components/pages/Profile.js",[],"/home/steve/codes/algernon_dapp/app/src/components/providers/FileStoreProvider.js",["548"],"import React, { createContext, useReducer, useEffect, useMemo } from 'react'\nimport initIpfs from '../../fileStorage/ipfs'\n\nconst UPDATE_TYPES = {\n  SET_CLIENT: 'SET_CLIENT'\n}\n\nconst initialState = {\n  client: null\n}\n\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case UPDATE_TYPES.SET_CLIENT:\n      return {\n        ...state,\n        client: action.payload.client\n      }\n    default:\n      return state\n  }\n}\n\nexport const FileStoreContext = createContext(null)\n\nconst initClient = async (setClient) => {\n  const client = await initIpfs()\n  setClient({client}) \n}\nconst Provider = ({children}) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  const contextValue = useMemo(() => {\n    return {\n      ...state,\n      setClient: ({ client }) => dispatch({type: UPDATE_TYPES.SET_CLIENT, payload: { client }})\n    };\n  }, [state, dispatch]);\n\n  useEffect(() => {\n    initClient(contextValue.setClient)\n  },[])\n\n  return (\n    <FileStoreContext.Provider value={contextValue}>\n      {children}\n    </FileStoreContext.Provider>\n  )\n}\n\nexport default Provider","/home/steve/codes/algernon_dapp/app/src/components/pages/Tag.tsx",[],["549","550"],"/home/steve/codes/algernon_dapp/app/src/components/pages/Topics.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/pages/About.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/pages/Admin.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/hooks/useGetAccount.js",["551"],"import React, {useEffect, useState} from 'react'\n// import  { web3 } from '../../utils/web3'\n\nconst Hook = () => {\n  const [account] = useState(null)\n\n  useEffect(() => {\n    //getAccounts()\n  })\n\n  return account\n}\n\nexport default Hook","/home/steve/codes/algernon_dapp/app/src/components/materialDashboard/layouts/Topbar.js",[],"/home/steve/codes/algernon_dapp/app/src/components/materialDashboard/layouts/Sidebar.js",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/Tags/TagsMain.js",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/Colleges/CollegeCards.js",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/optionsFormatters.js",[],"/home/steve/codes/algernon_dapp/app/src/components/layouts/MainLayout.js",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/Box.js",[],"/home/steve/codes/algernon_dapp/app/src/fileStorage/ipfs.js",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/Users/UserList.tsx",[],"/home/steve/codes/algernon_dapp/app/src/queries/tag.tsx",["552"],"import { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Tag as TagType } from 'theGraphTypes';\nimport { SelectedTag } from '../selectors/types';\nimport selectTopic from '../selectors/topic';\n\ninterface TagQueryVars {\n  skip?: number,\n  first?: number,\n  ids?: string[],\n  id?: string\n}\n\ninterface GetTagsData {\n  tags: SelectedTag[]\n}\n\ninterface GetTagData {\n  tag: SelectedTag\n}\n\nexport const GET_TAGS = gql`\n  query tags($skip: Int!, $first: Int!){\n    tags(skip: $skip, first: $first) {\n      id\n      tag\n    }\n}\n`;\n\nexport const useGetTags = (client: any, skip: number, first: number) => {\n  const {loading, error, data} =  useQuery<GetTagsData, TagQueryVars>(\n    GET_TAGS,\n    {\n      client,\n      variables: {\n        skip,\n        first\n      },\n      fetchPolicy: 'no-cache'\n    });\n\n  return {\n    loading,\n    error,\n    tags: data ? data.tags : null\n  } \n}\n\nexport const GET_TAG = gql`\n  query tag($id: String!){\n    tag(id: $id) {\n      id\n      tag\n      topics(orderBy: totalStaked, orderDirection: desc) {\n        id\n        topic {\n          id\n          owner {\n            address\n          }\n          tags(orderBy: totalStaked, orderDirection: desc, where: {active: true}) {\n            id\n            totalStaked\n            tag {\n              id\n              tag\n            }\n          }\n          title\n          description\n          url\n        }\n      }\n    }\n}\n`;\n\nexport const useGetTag = (client: any, id: string) => {\n  const {loading, error, data} = useQuery<GetTagData, TagQueryVars>(\n    GET_TAG,\n    {\n      client,\n      variables: {id},\n      fetchPolicy: 'no-cache'\n    });\n  return {\n    loading,\n    error,\n    // @ts-ignore\n    tag: data ? { ...data.tag, topics: data.tag.topics.map(t => t.topic).map(selectTopic)} : null\n  } \n}\n\nexport const GET_FILTERED_TAGS = gql`\n  query tags($tag_contains: String!, $first: Int!){\n    tags(where: {tag_contains: $tag_contains}, first: $first) {\n      id\n      tag\n      topics {\n        id\n        topic {\n          id\n        }\n      }\n    }\n}\n`;\n\nexport const getFilteredTags = (client: any, tag_contains: string) => {\n  const limit = 50\n  return client.query(\n    {\n      query: GET_FILTERED_TAGS,\n      variables: {tag_contains, first: limit}\n    });\n}","/home/steve/codes/algernon_dapp/app/src/queries/topic.tsx",["553","554"],"import { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport web3 from 'web3'\nimport { Topic as TopicType } from 'theGraphTypes';\nimport selectTopic from '../selectors/topic'\nimport { SelectedTopic } from '../selectors/types'\n\ninterface TopicListQueryVars {\n  skip?: number,\n  first?: number,\n  ids?: string[],\n  owner?: string\n}\n\ninterface TopicItemQueryVars {\n  id: string\n}\n\ninterface GetTopicsData {\n  topics: SelectedTopic[]\n}\n\ninterface GetTopicData {\n  topic: SelectedTopic\n}\n\n const fragments = {\n  comment: gql`\n    fragment CommentsPageComment on Comment {\n      id\n      postedBy {\n        login\n        html_url\n      }\n      createdAt\n      content\n    }\n  `,\n};\n\nexport const GET_TOPICS = gql`\n  query topics($skip: Int!, $first: Int!){\n    topics(skip: $skip, first: $first) {\n      id\n      createdAt\n      updatedAt\n      tags(orderBy: totalStaked, orderDirection: desc) {\n        id\n        totalStaked\n        tag {\n          id\n          tag\n        }\n      }\n      owner {\n        address\n      }\n      title\n      description\n      url\n    }\n}\n`;\n\nexport const useGetTopics = (client: any, skip: number, first: number) => {\n  const {loading, error, data} =  useQuery<GetTopicsData, TopicListQueryVars>(GET_TOPICS, {client, variables: {skip, first}});\n\n  return {\n    loading,\n    error,\n    topics: data ? data.topics.map(selectTopic) : null\n  } \n}\n\nexport const GET_TOPICS_BY_ID = gql`\n  query topics($skip: Int!, $first: Int!, $ids: [String!]!){\n    topics(skip: $skip, first: $first, where: {id_in: $ids} ) {\n      id\n      createdAt\n      updatedAt\n      title\n      description\n      url\n      tags(orderBy: totalStaked, orderDirection: desc) {\n        id\n        totalStaked\n        tag {\n          id\n          tag\n        }\n      }\n      owner {\n        address\n      }\n    }\n}\n`;\n\nexport const useGetTopicsById = (client: any, skip: number, first: number, ids: string[]) => {\n  const {loading, error, data, refetch} =  useQuery<GetTopicsData, TopicListQueryVars>(GET_TOPICS_BY_ID, {client, variables: {skip, first, ids}});\n\n  return {\n    loading,\n    error,\n    refetch,\n    topics: data ? data.topics : null\n  } \n}\n\nexport const GET_TOPICS_FOR_OWNER = gql`\n  query topics($skip: Int!, $first: Int!, $owner: String!){\n    topics(skip: $skip, first: $first, where: {owner: $owner}) {\n      id\n      createdAt\n      updatedAt\n      tags(orderBy: totalStaked, orderDirection: desc) {\n        totalStaked\n        id\n        tag {\n          id\n          tag\n        }\n      }\n      title\n      description\n      url\n    }\n}\n`\n\nexport const useGetTopicsForOwner = (client: any, skip: number, first: number, owner: string) => {\n  const checksummedAddress = web3.utils.toHex(owner)\n  const {loading, error, data, refetch} =  useQuery<GetTopicsData, TopicListQueryVars>(\n    GET_TOPICS_FOR_OWNER,\n    {\n      client,\n      variables: {\n        skip,\n        first,\n        owner:checksummedAddress\n      },\n      fetchPolicy: 'no-cache'\n    });\n  return {\n    loading,\n    error,\n    refetch,\n    topics: data ? data.topics.map(selectTopic) : null\n  } \n}\n\nexport const GET_TOPIC = gql`\n  query topic($id: String!){\n    topic(id: $id) {\n      id\n      createdAt\n      updatedAt\n      tags(orderBy: totalStaked, orderDirection: desc) {\n        id\n        totalStaked\n        tag {\n          id\n          tag\n        }\n      }\n      owner {\n        address\n      }\n      title\n      description\n      url\n      notes\n      requires {\n        id\n        title\n        url\n        description\n        owner {\n          id\n          address\n        }\n      }\n      supports {\n        id\n        title\n        url\n        description\n        owner {\n          id\n          address\n        }\n      }\n    }\n}\n`;\n\nexport const useGetTopic = (client: any, id: string) => {\n  const {loading, error, data, refetch} = useQuery<GetTopicData, TopicItemQueryVars>(\n    GET_TOPIC,\n    {client,\n      variables: {id},\n      fetchPolicy: 'no-cache'\n    });\n    \n  return {\n    loading,\n    error,\n    refetch,\n    topic: data ? selectTopic(data.topic) : null\n  } \n}","/home/steve/codes/algernon_dapp/app/src/utils/web3.ts",[],"/home/steve/codes/algernon_dapp/app/src/components/molecules/topics/Detail.tsx",["555","556"],"// @ts-nocheck\n\nimport React, { Fragment } from 'react'\nimport Paper from '../../atoms/Paper'\nimport Chip from '../../atoms/Chip'\nimport Link from '../../atoms/Link'\nimport Box from '../../atoms/Box'\nimport Flex from '../../atoms/Flex'\nimport RichText from '../../atoms/RichText'\nimport Badge from '../user/Badge'\n// import MetaAndForm from './MetaAndForm'\nimport NotesAndForm from './NotesAndForm'\nimport UpdateTopicMetaForm from '../../organisms/forms/UpdateTopicMeta'\nimport { convertToChecksum } from '../../../utils/web3'\nimport TagBadge from '../tags/TagBadge'\nimport CreateStakeForm from '../../organisms/forms/CreateStake'\nimport UpdateStakeForm from '../../organisms/forms/UpdateStake'\n\n\nconst equalAddresses = (addressA: string, addressB: string) => {\n  return typeof addressA === 'string' && typeof addressB === 'string' && addressA.toLowerCase() === addressB.toLowerCase()\n}\n\ntype TopicDetailProps = {\n  connectedAddress: string,\n  tagOptions: string[],\n  topicOptions: string[],\n  topic: any,\n  refetchTopic: any,\n  algernonInstance: any,\n  userStakes: any\n}\n\nconst RelatedCourse = (props:any) => {\n  const topic = props.topic\n\n  return (\n    <Paper>\n      <Link to={`/topic/${topic.id}`} element={<h4>{topic.title}</h4>} />\n      <p>{topic.description}</p>\n    </Paper>\n  )\n}\n\nconst TopicTags = ({tags, connectedAddress, algernonInstance, topicId, topicTitle, userStakes}) => {\n  return tags.map(tag => {\n    const existingStake = userStakes && userStakes.find(s => s.tagId === tag.id)\n    const trigger = algernonInstance ?\n      existingStake ?\n        <UpdateStakeForm\n          connectedAddress={connectedAddress}\n          algernonInstance={algernonInstance}\n          stake={existingStake}\n          topicTitle={topicTitle}\n          tag={tag.tag}\n        /> \n        :\n        <CreateStakeForm\n          connectedAddress={connectedAddress}\n          algernonInstance={algernonInstance}\n          topicId={topicId}\n          tagId={tag.id}\n          topicTitle={topicTitle}\n          tag={tag.tag}\n        />\n      : null\n    return <TagBadge key={tag.id} tag={tag} stakeTrigger={trigger} />\n  })\n}\n\nconst Detail = (props: TopicDetailProps): React.ReactNode => {\n  const { connectedAddress, algernonInstance, topic, topicOptions, tagOptions, refetchTopic, userStakes } = props\n  const { id, title, url, description, owner, notes, requires, supports, tags, updatedAt } = topic\n  const containerStyle = { margin:\"2em\", padding: \"2em\" }\n  const address = convertToChecksum(owner.address)\n\n  const isOwner = equalAddresses(address, connectedAddress)\n  const createdEl = (\n    <div style={{color: '#808080', marginTop: '.5em', fontStyle: 'italic', fontSize: '.9em'}}>\n      Last Updated: {new Date(1000*updatedAt).toLocaleDateString()}\n    </div>\n  )\n\n  const Notes: React.FC = () => (\n    <Flex flexDirection=\"column\" style={{ margin:\"1em\", padding: \"1em\" }}>\n      <h3>Curriculum</h3>\n      <Paper>\n        <RichText value={notes} />\n      </Paper>\n    </Flex>\n  )\n  console.log(`inside detail alg insance ${algernonInstance}`)\n  const MetaDetails: React.FC = () => (\n    <div style={{marginTop: '2em'}}>\n      <Flex>\n        {isOwner &&\n          <UpdateTopicMetaForm\n            connectedAddress={connectedAddress}\n            algernonInstance={algernonInstance}\n            topic={topic} \n            topicOptions={topicOptions}\n            tagOptions={tagOptions}\n            refetchTopic={refetchTopic}\n          />\n        }\n      </Flex>\n      <Paper style={containerStyle}>\n        <Flex flexDirection=\"column\">\n          <Flex>\n            <Box style={{width: '70%'}}>\n              <h1>{title}</h1>\n            </Box>\n            <Box style={{width: '25%'}}>\n              <Badge address={address} subEl={createdEl} />\n            </Box>\n          </Flex>\n          <Box>\n            {description}\n          </Box>\n          <Box>\n            <a target=\"blank\" href={url}>{url}</a>\n          </Box>\n          <Box>\n            <TopicTags\n              tags={tags}\n              algernonInstance={algernonInstance}\n              connectedAddress={connectedAddress}\n              topicId={topic.id}\n              topicTitle={topic.title}\n              userStakes={userStakes}\n            />\n          </Box>\n          <Flex justifyContent=\"space-around\">\n            <Flex flexDirection=\"column\" style={{width: '50%'}}>\n              <h3>Requires Courses</h3>\n              {requires.length ? requires.map(topic => <RelatedCourse id={topic.id} topic={topic} />) : '-'}\n            </Flex>\n            <Flex flexDirection=\"column\">\n              <h3>Supports Courses</h3> {supports.length ? supports.map(topic => <RelatedCourse id={topic.id} topic={topic}  />) : '-'}\n            </Flex>\n          </Flex>\n        </Flex>\n      </Paper>\n    </div>\n  )\n\n  /*\n  const editableMeta = (\n    <MetaAndForm\n      formProps ={{\n        connectedAddress,\n        algernonInstance,\n        topic,\n        topicOptions,\n        tagOptions,\n        refetchTopic\n      }}\n      defaultContent={<MetaDetails />} \n    />\n  )\n  */\n\n  const editableNotes = (\n    <NotesAndForm\n      formProps ={{\n        connectedAddress,\n        algernonInstance,\n        topic,\n        refetchTopic\n      }}\n      defaultContent={<Notes />} \n    />\n  )\n\n\n  \n  return (\n    <Fragment>\n      <MetaDetails />\n      {isOwner? editableNotes : <Notes />}\n    </Fragment>\n  )\n}\n\nexport default Detail","/home/steve/codes/algernon_dapp/app/src/components/organisms/Tags/TagDetail.js",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/Profile/ProfileMain.js",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/Topics/TopicList.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/Admin/Main.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/Flex.js",[],"/home/steve/codes/algernon_dapp/app/src/components/materialDashboard/components/SidebarNav.js",[],"/home/steve/codes/algernon_dapp/app/src/components/materialDashboard/components/ImageCard.js",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/Link.js",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/Tags/TagList.js",[],"/home/steve/codes/algernon_dapp/app/src/components/molecules/user/Badge.js",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/RichText.js",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/Chip.js",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/UpdateTopicMeta.js",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/CreateTopic.js",[],"/home/steve/codes/algernon_dapp/app/src/selectors/topic.ts",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/Paper.js",[],"/home/steve/codes/algernon_dapp/app/src/components/molecules/topics/NotesAndForm.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/molecules/user/BlockieAddress.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/molecules/topics/ListItem.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/Tags/TagsAdmin.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/molecules/admin/Roles.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/Address.js",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/Blockie.js",[],"/home/steve/codes/algernon_dapp/app/src/components/molecules/common/LoadingCard.js",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/buttons/Button.js",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/UpdateTopicNotes.js",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/CreateTag.js",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/Role.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/Loading.js",[],"/home/steve/codes/algernon_dapp/app/src/utils/formatters/index.js",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/RichText.js",[],"/home/steve/codes/algernon_dapp/app/src/schemas/topic.js",[],"/home/steve/codes/algernon_dapp/app/src/components/formikTLDR/forms/utils.js",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/Text.js",[],"/home/steve/codes/algernon_dapp/app/src/components/formikTLDR/forms/CallAndWeb3Form.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/formikTLDR/forms/Web3Form.tsx",[],"/home/steve/codes/algernon_dapp/app/src/schemas/admin.ts",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/ErrorMessage.js",[],"/home/steve/codes/algernon_dapp/app/src/schemas/common.js",[],"/home/steve/codes/algernon_dapp/app/src/components/formikTLDR/forms/common.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/Select.js",[],"/home/steve/codes/algernon_dapp/app/src/schemas/tag.js",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/Modal.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/ConnectedWallet/index.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/SelectWallet.tsx",[],"/home/steve/codes/algernon_dapp/app/src/schemas/wallet.ts",[],"/home/steve/codes/algernon_dapp/app/src/components/formikTLDR/forms/BasicForm.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/logos/Fortmatic.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/CardSelect.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/logos/MetaMask.tsx",[],"/home/steve/codes/algernon_dapp/app/src/utils/wallets/index.ts",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/CardItem.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/logos/Base.tsx",[],"/home/steve/codes/algernon_dapp/app/src/utils/wallets/fortmatic.ts",[],"/home/steve/codes/algernon_dapp/app/src/utils/wallets/metamask.ts",[],"/home/steve/codes/algernon_dapp/app/src/utils/wallets/base.ts",[],"/home/steve/codes/algernon_dapp/app/src/queries/user.tsx",["557","558"],"import { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport web3 from 'web3'\nimport selectTopic from '../selectors/topic'\nimport { SelectedTopic } from '../selectors/types'\nimport { nativeToDisplayBalance } from '../utils/formatters';\nimport { add } from 'lodash';\n\ninterface UserQueryVars {\n  owner?: string\n}\n\ninterface UserData {\n  user: {\n    stakedBalance: string,\n    unstakedBalance: string,\n    undepositedBalance: string\n  }\n}\n\nexport const GET_OWNER_BY_ADDRESS = gql`\n  query user($owner: String!){\n    user(id: $owner) {\n      undepositedBalance\n      stakedBalance\n      unstakedBalance\n    }\n}\n`\n\nconst addDisplayBalances = (balances: any): any => {\n  const balanceTypes = Object.keys(balances)\n  return balanceTypes.reduce((acc, balanceType) => {\n    acc[balanceType + 'Display'] = nativeToDisplayBalance(balances[balanceType])\n    return acc\n  }, {...balances})\n}\nexport const useGetOwnerByAddress = (client: any, owner: string) => {\n  const checksummedAddress = web3.utils.toHex(owner)\n  const {loading, error, data, refetch} =  useQuery<UserData, UserQueryVars>(\n    GET_OWNER_BY_ADDRESS,\n    {\n      client,\n      variables: {\n        owner:checksummedAddress\n      },\n      fetchPolicy: 'no-cache'\n    });\n\n  const defaultBalances = { \n    undepositedBalance: \"0\",\n    unstakedBalance: \"0\",\n    stakedBalance: \"0\"\n  }\n\n  const user = data ?\n    data.user ?\n      addDisplayBalances(data.user)\n      :\n      addDisplayBalances(defaultBalances)\n    : addDisplayBalances(defaultBalances)\n\n  return {\n    loading,\n    error,\n    refetch,\n    user\n  } \n}\n","/home/steve/codes/algernon_dapp/app/src/components/organisms/Profile/TokenBalances.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/DepositTokens.tsx",[],"/home/steve/codes/algernon_dapp/app/src/schemas/token.js",[],["559","560"],"/home/steve/codes/algernon_dapp/app/src/components/atoms/icons/Stake.js",[],"/home/steve/codes/algernon_dapp/app/src/components/molecules/tags/TagBadge.js",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/CreateStake.tsx",["561","562"],"import React from 'react'\nimport { Form } from 'formik'\nimport { createStakeSchema } from '../../../schemas/stake'\nimport Select from '../../atoms/inputs/Select'\nimport Web3Form from '../../formikTLDR/forms/Web3Form'\nimport Text from '../../atoms/inputs/Text'\nimport Button from '../../atoms/inputs/buttons/Button'\nimport Modal from '../../atoms/Modal'\nimport Box from '../../atoms/Box'\nimport StakeIcon from '../../atoms/icons/Stake'\nimport { displayToNativeBalance } from '../../../utils/formatters'\n\nconst Success = () => (\n  <div>\n    <h3>Stake Successful!</h3>\n  </div>\n)\n\nconst getForm = (tag: string, topicTitle: string) => (submit: any, isValid: boolean) => (\n  <Form>\n    <div>Stake on</div>\n    <div>{topicTitle}</div>\n    <div>and {tag}</div>\n    <div style={{padding: '2em 0'}}>\n      <Text\n        label=\"Stake Amount\"\n        name=\"amount\"\n        type=\"number\" \n      />\n    </div>\n    <Button\n      label=\"Submit Stake\"\n      onClick={submit}\n      disabled={!isValid}\n    />\n  </Form>\n)\n\nconst getMethodArgs = (topicId: string, tagId: string) => (values: any) => {\n  return [topicId, tagId, displayToNativeBalance(values.amount)]\n}\n\nconst CreateStakeForm = ({ connectedAddress, algernonInstance, topicId, tagId, tag, topicTitle }: any) => {\n  const formProps = {\n    defaultValues: createStakeSchema.defaultValues,\n    schema: createStakeSchema.schema,\n    getForm: getForm(tag, topicTitle),\n    contractMethod: algernonInstance.methods.addStake,\n    connectedAddress,\n    getMethodArgs: getMethodArgs(topicId, tagId),\n    stateEls: {\n      successEl: Success\n    },\n    formOnSuccess: false\n  }\n  return (\n    <Modal\n      triggerText=''\n      trigger={<StakeIcon />}\n      title=''\n      contentText=''\n      getForm={(cancelForm: any) => {\n        return (\n          <Web3Form\n            formProps={{...formProps, cancelForm}}\n          />\n        )\n      }}\n    />\n  )\n}\n\nexport default CreateStakeForm","/home/steve/codes/algernon_dapp/app/src/schemas/stake.js",[],"/home/steve/codes/algernon_dapp/app/src/queries/stake.tsx",[],"/home/steve/codes/algernon_dapp/app/src/selectors/stake.ts",["563","564"],"import { map } from 'lodash'\nimport { createSelector } from 'reselect'\nimport { nativeToDisplayBalance } from '../utils/formatters'\nimport { convertToChecksum } from '../utils/web3'\n\nconst getStake = (taggedTopics: any):any => {\n  return taggedTopics\n}\n\nconst formatStake = (taggedTopic: any) => {\n  const stake = taggedTopic.stakes[0]\n  if (stake) {\n    return {\n      ...stake,\n      displayAmount: nativeToDisplayBalance(stake.amount),\n      tagId: taggedTopic.tag.id\n    }\n  }\n\n  return null\n}\n\nconst selectUserStakesForTopic = createSelector(\n  [getStake],\n  (taggedTopics) => {\n    return taggedTopics.map(formatStake).filter( (s:any) => s)\n  }\n)\n\nexport default selectUserStakesForTopic","/home/steve/codes/algernon_dapp/app/src/components/organisms/forms/UpdateStake.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/atoms/inputs/Radio.js",["565"],"import React from 'react'\nimport { useField } from 'formik'\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport ErrorMessage from './ErrorMessage';\n\nconst RadioUI = (props) => {\n  const [field, meta] = useField(props);\n  const isError = meta.touched && !!meta.error\n  const radioOptions = props.optionItems || \n    props.options.map(\n      (o => <FormControlLabel key={o.value} value={o.value} label={o.label} control={<Radio />} />)\n    )\n\n  return (\n    <FormControl style={props.style}>\n      <FormLabel>{props.label}</FormLabel>\n      <RadioGroup\n        {...field}\n        {...props}\n      >\n        {radioOptions}\n      </RadioGroup>\n      <ErrorMessage\n        isError={isError}\n        errorMsg={meta.error} />\n    </FormControl>\n  )\n}\n\n  const styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: theme.spacing.unit / 4,\n  },\n  noLabel: {\n    marginTop: theme.spacing.unit * 3,\n  },\n});\n\nexport default withStyles(styles)(RadioUI)","/home/steve/codes/algernon_dapp/app/src/selectors/user.ts",[],"/home/steve/codes/algernon_dapp/app/src/components/organisms/Stakes/StakeList.tsx",[],"/home/steve/codes/algernon_dapp/app/src/components/molecules/stakes/TopicStakesListItem.tsx",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/index.js",[],["566","567"],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/App.js",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/serviceWorker.js",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/utils/apolloClient.js",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/config.js",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/pages/Overview.js",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/pages/Validators.jsx",["568","569","570","571"],"import React from 'react'\nimport AppPage from '../common/AppPage'\nimport TableValidators from '../staking/TableValidators'\nimport { GetIndexers } from '../../queries/indexers'\nimport tableFields from '../staking/theGraphProtocol/tableFields'\nimport './Validators.scoped.css'\nimport IndexersTable from '../staking/theGraphProtocol/IndexersTable'\n\nconst SORT_STATE = {\n  field: 'stakedTokens',\n  direction: 'desc',\n  properties: tableFields\n}\n\nconst PAGINATION_STATE = {\n  limit: 20,\n  offset: 0\n}\n\nconst Validators = ({}) => {\n\n  const {loading: loadingIndexers, indexers, error, refetch } = GetIndexers(PAGINATION_STATE.offset, PAGINATION_STATE.limit, SORT_STATE.field, SORT_STATE.direction)\n  const loading = {\n    loading: loadingIndexers,\n    loaderPath:\"/img/validator-list-loading.svg\"\n  }\n  console.log(`Vas Page ${loadingIndexers} -- ${indexers} ${error}`)\n\n  const updateSort = (field) => refetch({offset: PAGINATION_STATE.offset, limit: PAGINATION_STATE.limit, orderBy: field, direction: SORT_STATE.direction})\n\n  return (\n    <AppPage loading={{loading: false}}>\n \n        <div className=\"filterContainer\">filters TBD</div>\n        <IndexersTable />\n \n    </AppPage>\n\n  )\n}\n\nexport default Validators\n","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/utils/address.js",["572"],"import bech32 from \"bech32\"\n\nconst getAddressType = (address) => {\n  if (address.startsWith(\"0x\")) return \"ethereum\"\n  try {\n    bech32.decode(address)\n    return \"cosmos\"\n  } catch (error) {\n    // ignore error\n  }\n  return \"any\"\n}\n\nexport const formatAddress = (address, length = 4) => {\n  if (!address) {\n    return `Address Not Found`\n  }\n  switch (getAddressType(address)) {\n    case \"cosmos\":\n      return address.split(`1`)[0] + `…` + address.slice(-1 * length)\n    case \"ethereum\":\n      return address.slice(0, 2 + length) + `…` + address.slice(-1 * length)\n    case \"any\":\n      return address.slice(0, length) + `…` + address.slice(-1 * length)\n  }\n}","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/TmDataLoading.jsx",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/TmPage.jsx",[],["573","574"],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/staking/TableValidators.jsx",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/staking/PanelSort.jsx",["575"],"import React from 'react'\nimport { MdArrowDropUp } from 'react-icons/md'\nimport './PanelSort.scoped.scss'\n\nconst SortHeader = ({sort, title, value, tooltip, updateSort, toggleDirection, active, sortDirection}) => {\n  const headerClass = `sort-by panel-sort-table-header ${active ? 'active' : ''} ${active && sortDirection === 0 ? 'asc' : ''} ${active && sortDirection === 1 ? 'desc' : ''}`\n\n  return (\n    <th\n      className={headerClass}\n    >\n      { sort ?\n        <a className=\"sort-by-link\">\n          <span onClick={() => updateSort(value)}>{ title }</span>\n          <MdArrowDropUp onClick={toggleDirection} className=\"material-icons notranslate\" />\n        </a>\n        :\n        <span>{ title }</span>\n      }\n    </th>\n  )\n}\n\nconst PanelSort = ({sortField, properties, sortDirection, setSortField, toggleDirection}) => {\n \n\n  const sortFields = properties.map(p => <SortHeader key={p.value} {...p} updateSort={setSortField} toggleDirection={toggleDirection} sort={p.sortable} active={p.value === sortField} sortDirection={sortDirection} />)\n  return (\n    <thead>\n    <tr className={`panel-sort-container`}>\n      \n        <th>#</th>\n        {sortFields}\n    </tr>\n    </thead>\n  )\n}\n\nexport default PanelSort\n","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/queries/indexers.tsx",[],["576","577"],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/selectors/indexer.ts",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/utils/helpers.ts",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/utils/formatters/index.js",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/Avatar.tsx",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/AppPage.tsx",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/AppHeader.tsx",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/account/UserMenu.jsx",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/AppMenu.tsx",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/Modal.jsx",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/account/UserMenuAddress.tsx",["578"],"import React from 'react'\nimport Address from '../common/Address'\nimport './UserMenuAddress.scoped.css'\n\nconst UserMenuAddress = ({ address, sessionType }: { address: string, sessionType: string }) => {\n\n  return (\n   \n      <div className=\"address\">\n        <div  className=\"menu-address\">\n        <Address address={address} />\n        </div>\n        { sessionType === 'ledger' && \n          <div className=\"show-on-ledger-container\">\n            <a className=\"show-on-ledger\">\n              Show on Ledger\n            </a>\n          </div>\n        }\n      </div>\n  \n  )\n}\n\nexport default UserMenuAddress\n","/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/account/UserAccountRow.jsx",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/common/Address.tsx",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/staking/theGraphProtocol/LiValidator.tsx",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/staking/theGraphProtocol/tableFields.js",[],"/home/steve/codes/dapps/destake/ui/scaffold-eth/packages/react-app/src/components/staking/theGraphProtocol/IndexersTable.tsx",["579","580"],"import React, { useState } from 'react'\nimport ReactToolTip from 'react-tooltip'\n\nimport { GetIndexers } from '../../../queries/indexers'\nimport TmDataLoading from '../../common/TmDataLoading'\nimport PanelSort from '../PanelSort'\nimport LiValidator from './LiValidator'\nimport tableFields from './tableFields'\n\nconst DIRECTIONS = ['asc', 'desc']\n\nconst initialState = {\n  sortField: null,\n  sortDirection: 1\n}\n\nconst SORT_STATE = {\n  sortField: 'stakedTokens',\n  sortDirection: 'desc',\n  properties: tableFields\n}\n\nconst PAGINATION_STATE = {\n  first: 7,\n  skip: 0\n}\n\nconst IndexersTable = () => {\n  const [state, setState] = useState({...initialState, ...SORT_STATE, sortDirection: SORT_STATE.sortDirection === 'asc' ? 0 : 1})\n\n  const toggleDirection = () => {\n    console.log('togglin')\n    const sortDirection = (state.sortDirection + 1) % 2\n    setState({...state, sortDirection})\n    updateSort(state.sortField, sortDirection === 0 ? 'asc' : 'desc')\n\n  }\n\n  const setSortField = (sortField: string) => {\n    console.log('sortin')\n    setState({...state, sortField, sortDirection: 1})\n    updateSort(sortField, 'desc')\n  }\n  \n  const {loading: loadingIndexers, indexers, error, refetch } = GetIndexers(PAGINATION_STATE.skip, PAGINATION_STATE.first, SORT_STATE.sortField, state.sortDirection === 0 ? 'asc' : 'desc')\n  const loading = {\n    loading: loadingIndexers,\n    // src:\"/img/validator-list-loading.svg\",\n    alt: 'loading table'\n  }\n\n  const updateSort = (orderBy: string, orderDirection: string) => refetch({skip: PAGINATION_STATE.skip, first: PAGINATION_STATE.first, orderBy, orderDirection })\n\n  console.log(`INdexers Table\\n${JSON.stringify(indexers)}`)\n  const body = loadingIndexers ? \n    <TmDataLoading {...loading} />\n    :\n    indexers !== null ?\n      indexers.map((validator, i) => <LiValidator key={validator.id} index={i} validator={validator} />)\n      :\n      <div> error loading table</div>\n\n  return (\n    <div>\n      <ReactToolTip place='top' />\n    <table>\n      <PanelSort sortField={state.sortField} properties={state.properties} sortDirection={state.sortDirection} setSortField={setSortField} toggleDirection={toggleDirection} />\n      <tbody>\n        {body}\n      </tbody>\n    </table>\n    </div>\n  )\n\n}\n\nexport default IndexersTable \n  ",{"ruleId":"581","replacedBy":"582"},{"ruleId":"583","replacedBy":"584"},{"ruleId":"585","severity":1,"message":"586","line":1,"column":29,"nodeType":"587","messageId":"588","endLine":1,"endColumn":38},{"ruleId":"585","severity":1,"message":"589","line":1,"column":40,"nodeType":"587","messageId":"588","endLine":1,"endColumn":48},{"ruleId":"590","severity":1,"message":"591","line":42,"column":5,"nodeType":"592","endLine":42,"endColumn":7,"suggestions":"593"},{"ruleId":"581","replacedBy":"582"},{"ruleId":"583","replacedBy":"584"},{"ruleId":"585","severity":1,"message":"594","line":1,"column":8,"nodeType":"587","messageId":"588","endLine":1,"endColumn":13},{"ruleId":"595","severity":1,"message":"596","line":3,"column":17,"nodeType":"587","messageId":"588","endLine":3,"endColumn":24},{"ruleId":"595","severity":1,"message":"597","line":4,"column":19,"nodeType":"587","messageId":"588","endLine":4,"endColumn":28},{"ruleId":"595","severity":1,"message":"598","line":27,"column":8,"nodeType":"587","messageId":"588","endLine":27,"endColumn":17},{"ruleId":"595","severity":1,"message":"599","line":5,"column":8,"nodeType":"587","messageId":"588","endLine":5,"endColumn":12},{"ruleId":"595","severity":1,"message":"600","line":75,"column":11,"nodeType":"587","messageId":"588","endLine":75,"endColumn":13},{"ruleId":"595","severity":1,"message":"601","line":5,"column":10,"nodeType":"587","messageId":"588","endLine":5,"endColumn":32},{"ruleId":"595","severity":1,"message":"602","line":6,"column":10,"nodeType":"587","messageId":"588","endLine":6,"endColumn":13},{"ruleId":"581","replacedBy":"603"},{"ruleId":"583","replacedBy":"604"},{"ruleId":"595","severity":1,"message":"605","line":4,"column":8,"nodeType":"587","messageId":"588","endLine":4,"endColumn":14},{"ruleId":"595","severity":1,"message":"606","line":9,"column":8,"nodeType":"587","messageId":"588","endLine":9,"endColumn":11},{"ruleId":"595","severity":1,"message":"607","line":1,"column":10,"nodeType":"587","messageId":"588","endLine":1,"endColumn":13},{"ruleId":"595","severity":1,"message":"608","line":4,"column":10,"nodeType":"587","messageId":"588","endLine":4,"endColumn":27},{"ruleId":"585","severity":1,"message":"609","line":4,"column":8,"nodeType":"587","messageId":"588","endLine":4,"endColumn":18},{"ruleId":"581","replacedBy":"610"},{"ruleId":"583","replacedBy":"611"},{"ruleId":"585","severity":1,"message":"612","line":3,"column":8,"nodeType":"587","messageId":"588","endLine":3,"endColumn":23},{"ruleId":"613","severity":1,"message":"614","line":20,"column":21,"nodeType":"615","messageId":"616","endLine":20,"endColumn":23},{"ruleId":"585","severity":1,"message":"617","line":23,"column":9,"nodeType":"587","messageId":"588","endLine":23,"endColumn":16},{"ruleId":"585","severity":1,"message":"618","line":29,"column":9,"nodeType":"587","messageId":"588","endLine":29,"endColumn":19},{"ruleId":"619","severity":1,"message":"620","line":18,"column":3,"nodeType":"621","messageId":"622","endLine":25,"endColumn":4},{"ruleId":"581","replacedBy":"623"},{"ruleId":"583","replacedBy":"624"},{"ruleId":"625","severity":1,"message":"626","line":13,"column":9,"nodeType":"627","endLine":13,"endColumn":37},{"ruleId":"581","replacedBy":"610"},{"ruleId":"583","replacedBy":"611"},{"ruleId":"625","severity":1,"message":"626","line":15,"column":13,"nodeType":"627","endLine":15,"endColumn":43},{"ruleId":"595","severity":1,"message":"628","line":10,"column":7,"nodeType":"587","messageId":"588","endLine":10,"endColumn":17},{"ruleId":"595","severity":1,"message":"629","line":45,"column":46,"nodeType":"587","messageId":"588","endLine":45,"endColumn":51},"no-native-reassign",["630"],"no-negated-in-lhs",["631"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'contextValue.setClient'. Either include it or remove the dependency array.","ArrayExpression",["632"],"'React' is defined but never used.","@typescript-eslint/no-unused-vars","'TagType' is defined but never used.","'TopicType' is defined but never used.","'fragments' is assigned a value but never used.","'Chip' is defined but never used.","'id' is assigned a value but never used.","'nativeToDisplayBalance' is defined but never used.","'add' is defined but never used.",["630"],["631"],"'Select' is defined but never used.","'Box' is defined but never used.","'map' is defined but never used.","'convertToChecksum' is defined but never used.","'InputLabel' is defined but never used.",["630"],["631"],"'TableValidators' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'loading' is assigned a value but never used.","'updateSort' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["630"],["631"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'DIRECTIONS' is assigned a value but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"633","fix":"634"},"Update the dependencies array to be: [contextValue.setClient]",{"range":"635","text":"636"},[943,945],"[contextValue.setClient]"]